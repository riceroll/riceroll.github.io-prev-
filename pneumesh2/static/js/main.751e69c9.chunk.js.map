{"version":3,"sources":["model.js","logo.svg","viewer.js","gui.js","main.js","reportWebVitals.js","index.js"],"names":["Vertex","pos","fixed","pos0","vel","force","this","vs","es","fs","id","all","length","push","Edge","lMax","maxContraction","edgeChannel","edgeActive","l","iv","Model","viewer","controls","sharedData","reset","loadData","resetSelection","recordV","v","e","v0","fixedVs","script","f","vStatus","eStatus","fStatus","iAction","numSteps","timeStart","Date","editing","simulate","gravity","directional","euler","thre","numChannels","defaultNumChannels","numActions","defaultNumActions","inflateChannel","Array","fill","contractionPercent","data","from","p","i","Math","sqrt","currentLm","distanceTo","maxMaxContraction","divideScalar","multiplyScalar","defaultMaxLength","precompute","x","y","z","zOffset","bbox","vv","clone","copy","copyArrays","oldValue","newValue","min","map","_","iChannel","vec","sub","l0","lMin","k","normalize","add","negate","gravityFactor","numStepsAction","floor","n","scripting","iStep","runScript","update","contractionPercentRate","movingJoint","h","frictionFactor","dampingRatio","iJoint","defaultMinLength","iJoints","j","notExist","includes","updateDataStructure","ies","ee","filter","updateFromDataStructure","iEdge","center","cent0","centroid","cent","t","getTime","xMax","yMax","zMax","xMin","yMin","zMin","Infinity","ids","alert","resetV","eulerInverse","setFromVector3","toVector3","applyEuler","contractionInterval","contractionSteps","round","reindexObjects","cls","extend","OrbitControls","cWhite","THREE","cChannels","cBlack","cSelected","cHovered","cFixed","cPassive","dTube","Ball","d","c","model","handleClick","handlePointerOver","handlePointerOut","setOControls","translating","mesh","useRef","material","transControls","useState","dragging","setDragging","prevPos","useFrame","state","current","position","color","worldPosition","useEffect","callbackDraggingChanged","value","target","object","addEventListener","removeEventListener","TransformControls","ref","enabled","showX","showY","showZ","mode","space","castShadow","scale","onClick","onPointerOver","onPointerOut","args","Joint","setTranslating","sate","selected","hovered","removingJoint","removeJoint","forceUpdate","addingJoint","addJoint","updateGUI","stopPropagation","Cylinder","v1","axis","quaternion","setFromUnitVectors","setFromQuaternion","rotation","Beam","ie","vecPiston","vecTube","vecConstraint","vOut0","vOut1","vIn0","vIn1","vTube00","vTube01","vTube11","vTube10","vConstraint0","vConstraint1","cOut","cIn","cJoint","cBeam","changeColor","showChannel","cylinders","PneuMesh","React","clock","timeUntilNextFrame","getDelta","setTimeout","ready","invalidate","max","step","joints","beams","entries","String","DLight","light","set","shadow","mapSize","width","height","camera","top","right","left","bottom","near","far","window","fps","Controls","oControls","useThree","domElement","gl","Viewer","useReducer","shadowMap","concurrent","onCreated","intensity","setClearColor","setPixelRatio","devicePixelRatio","type","fov","up","antialias","receiveShadow","visible","opacity","rotation-x","PI","position-z","s","Stats","cBackground","paddingBlocks","marginSlider","useStyles","makeStyles","theme","mainGUI","background","minHeight","editingGUI","scriptGUI","editingScriptGUI","SettingActive","icons","keys","every","Grid","item","style","textAlign","IconButton","size","WbSunny","FiberManualRecord","ListItem","ListItemText","container","SettingChannel","checked","RadioButtonChecked","RadioButtonUnchecked","styles","ControlChannel","switches","Switch","console","log","alignItems","Scripts","classes","widthBlocks","Block","setHovered","isOn","className","scriptBlock","padding","margin","border","Row","blocks","spacing","rows","GUI","options","GUIHovered","List","button","input","document","createElement","body","appendChild","getElementById","click","onchange","reader","FileReader","onload","event","inputFileString","result","JSON","parse","loadDict","readAsText","files","removeChild","ListItemIcon","Publish","saveData","json","stringify","download","display","href","encodeURIComponent","GetApp","Divider","ChevronLeft","Typography","Slider","disabled","defaultValue","aria-labelledby","valueLabelDisplay","onChange","val","Lock","LockOpen","editingScript","FilterCenterFocus","addEdges","SettingsEthernet","arial-labelledby","rotate","paddingTop","paddingBottom","widthSliders","fontSize","Main","unSelect","b","code","metaKey","ctrlKey","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","root","ReactDOM","render","StrictMode"],"mappings":"4NAGMA,E,WAGJ,WAAYC,EAAKC,EAAOC,EAAMC,EAAKC,GAAQ,oBACzCC,KAAKL,IAAMA,EACXK,KAAKJ,MAAQA,EACbI,KAAKH,KAAOA,EACZG,KAAKF,IAAMA,EACXE,KAAKD,MAAOA,EACZC,KAAKC,GAAI,GACTD,KAAKE,GAAK,GACVF,KAAKG,GAAK,GAEVH,KAAKI,GAAKV,EAAOW,IAAIC,OACrBZ,EAAOW,IAAIE,KAAKP,M,uDAGlB,gB,KAjBIN,EACGW,IAAM,G,IAgCTG,EAGJ,WAAYP,EAAIQ,EAAMC,EAAgBC,EAAaC,EAAYC,GAAI,oBACjEb,KAAKC,GAAK,GACVD,KAAKS,KAAOA,EACZT,KAAKU,eAAiBA,EACtBV,KAAKW,YAAcA,EACnBX,KAAKY,WAAaA,EAClBZ,KAAKa,EAAIA,EANuD,oBAQjDZ,GARiD,IAQhE,2BAAmB,CAAC,IAAXa,EAAU,QACjBd,KAAKC,GAAGM,KAAKb,EAAOW,IAAIS,KATsC,8BAWhEpB,EAAOW,IAAIJ,EAAG,IAAIA,GAAGM,KAAKb,EAAOW,IAAIJ,EAAG,KACxCP,EAAOW,IAAIJ,EAAG,IAAIA,GAAGM,KAAKb,EAAOW,IAAIJ,EAAG,KACxCP,EAAOW,IAAIJ,EAAG,IAAIC,GAAGK,KAAKP,MAC1BN,EAAOW,IAAIJ,EAAG,IAAIC,GAAGK,KAAKP,MAE1BA,KAAKI,GAAKI,EAAKH,IAAIC,OACnBE,EAAKH,IAAIE,KAAKP,OApBZQ,EACGH,IAAM,G,IA2BTU,E,WAiBJ,aAAe,oBACbf,KAAKgB,OAAS,KAEdhB,KAAKN,OAASA,EACdM,KAAKQ,KAAOA,EACZR,KAAKe,MAAQA,EACbf,KAAKiB,SAAW,KAChBjB,KAAKkB,WAAa,KAElBlB,KAAKmB,QAELnB,KAAKoB,WACLpB,KAAKqB,iBACLrB,KAAKsB,U,yCAGP,WAEEtB,KAAKuB,EAAI,GACTvB,KAAKwB,EAAI,GACTxB,KAAKyB,GAAK,GACVzB,KAAK0B,QAAU,GACf1B,KAAKS,KAAO,GACZT,KAAKY,WAAa,GAClBZ,KAAKW,YAAc,GACnBX,KAAK2B,OAAS,GAGd3B,KAAKU,eAAiB,GACtBV,KAAKF,IAAM,GACXE,KAAK4B,EAAI,GACT5B,KAAKa,EAAI,GAGTb,KAAK6B,QAAU,GACf7B,KAAK8B,QAAU,GACf9B,KAAK+B,QAAU,GAGf/B,KAAKgC,QAAU,EACfhC,KAAKiC,SAAW,EAChBjC,KAAKkC,UAAY,IAAIC,KAGrBnC,KAAKoC,SAAU,EACfpC,KAAKqC,UAAW,EAChBrC,KAAKsC,SAAU,EACftC,KAAKuC,aAAc,EACnBvC,KAAKwC,MAAQ,IAAIC,QAAW,EAAG,EAAG,GAGlCzC,KAAK0C,YAAc3B,EAAM4B,mBACzB3C,KAAK4C,WAAa7B,EAAM8B,kBACxB7C,KAAK8C,eAAiB,IAAIC,MAAM/C,KAAK0C,aAAaM,MAAK,GACvDhD,KAAKiD,mBAAqB,IAAIF,MAAM/C,KAAK0C,aAAaM,KAAK,K,sBAI7D,SAASE,GAMP,IAJA,IAAI3B,EAAI,GACJC,EAAIuB,MAAMI,KAAKD,EAAK1B,GACpBI,EAAImB,MAAMI,KAAKD,EAAKtB,GACpBwB,EAAIL,MAAMI,KAAKD,EAAKE,GACfC,EAAE,EAAGA,EAAEH,EAAK3B,EAAEjB,OAAQ+C,IAC7B9B,EAAEhB,KAAK,IAAIkC,UAAaS,EAAK3B,EAAE8B,GAAG,GAAIH,EAAK3B,EAAE8B,GAAG,GAAIH,EAAK3B,EAAE8B,GAAG,KAGhE,GADArD,KAAKmB,QACD+B,EAAKzC,KAAM,CACb,IAAIA,EAAOyC,EAAKzC,KACZC,EAAiBwC,EAAKxC,eACtBgB,EAAUwB,EAAKxB,QACff,EAAcuC,EAAKvC,YACnBC,EAAasC,EAAKtC,WACtBZ,KAAKoB,SAASG,EAAGC,EAAGI,EAAGwB,EAAG3C,EAAMC,EAAgBgB,EAASf,EAAaC,QAGtEZ,KAAKoB,SAASG,EAAGC,EAAGI,EAAGwB,GAEzBpD,KAAKqB,iBACLrB,KAAKsB,Y,sBAGP,SAASC,EAAGC,EAAGI,EAAGwB,GAA+F,IAA5F3C,EAA2F,uDAAtF,KAAMC,EAAgF,uDAAjE,KAAMgB,EAA2D,uDAAnD,KAAMf,EAA6C,uDAAjC,KAAMC,EAA2B,uDAAhB,KAAMe,EAAU,uDAAH,GACvGJ,GAAKC,GACPxB,KAAKuB,EAAIA,EACTvB,KAAKwB,EAAIA,IAGTxB,KAAKuB,EAAEhB,KAAK,IAAIkC,UAAa,GAAI,EAAEa,KAAKC,KAAK,GAAI,KACjDvD,KAAKuB,EAAEhB,KAAK,IAAIkC,UAAa,EAAG,EAAEa,KAAKC,KAAK,GAAI,KAChDvD,KAAKuB,EAAEhB,KAAK,IAAIkC,WAAc,GAAI,EAAEa,KAAKC,KAAK,GAAI,KAClDvD,KAAKuB,EAAEhB,KAAK,IAAIkC,UAAa,EAAG,EAAG,EAAEa,KAAKC,KAAK,GAAK,KAEpDvD,KAAKwB,EAAEjB,KAAK,CAAC,EAAG,IAChBP,KAAKwB,EAAEjB,KAAK,CAAC,EAAG,IAChBP,KAAKwB,EAAEjB,KAAK,CAAC,EAAG,IAChBP,KAAKwB,EAAEjB,KAAK,CAAC,EAAG,IAChBP,KAAKwB,EAAEjB,KAAK,CAAC,EAAG,IAChBP,KAAKwB,EAAEjB,KAAK,CAAC,EAAG,KAIlB,IADA,IAAIiD,EAAYxD,KAAKuB,EAAE,GAAGkC,WAAWzD,KAAKuB,EAAE,KAAO,EAAIR,EAAM2C,mBACpDL,EAAE,EAAGA,EAAErD,KAAKuB,EAAEjB,OAAQ+C,IAC7BrD,KAAKuB,EAAE8B,GAAGM,aAAaH,GACvBxD,KAAKuB,EAAE8B,GAAGO,eAAe7C,EAAM8C,kBAGjC7D,KAAKsB,UAEDI,IAAS1B,KAAK0B,QAAUA,GACxBjB,IAAMT,KAAKS,KAAOA,GAClBC,IAAgBV,KAAKU,eAAiBA,GACtCE,IAAYZ,KAAKY,WAAaA,GAC9BD,IAAaX,KAAKW,YAAcA,GAChCgB,IAAQ3B,KAAK2B,OAASA,GAC1B3B,KAAKqB,iBAELrB,KAAK8D,e,sBAGP,WACE,IADS,EACLZ,EAAO,CACXA,EAAS,IAFA,cAGKlD,KAAKuB,GAHV,IAGT,2BAAsB,CAAC,IAAdA,EAAa,QACpB2B,EAAK3B,EAAEhB,KAAK,CAACgB,EAAEwC,EAAGxC,EAAEyC,EAAGzC,EAAE0C,KAJlB,8BAYT,OANAf,EAAK1B,EAAIxB,KAAKwB,EACd0B,EAAKzC,KAAOT,KAAKS,KACjByC,EAAKxC,eAAiBV,KAAKU,eAC3BwC,EAAKxB,QAAS1B,KAAK0B,QACnBwB,EAAKvC,YAAcX,KAAKW,YACxBuC,EAAKtC,WAAaZ,KAAKY,WAChBsC,I,4BAGT,WAEElD,KAAK6B,QAAU,IAAIkB,MAAM/C,KAAKuB,EAAEjB,QAAQ0C,KAAK,GAC7ChD,KAAK8B,QAAU,IAAIiB,MAAM/C,KAAKwB,EAAElB,QAAQ0C,KAAK,GAC7ChD,KAAK+B,QAAU,IAAIgB,MAAM/C,KAAK4B,EAAEtB,QAAQ0C,KAAK,K,qBAG/C,WACEhD,KAAKyB,GAAK,GACV,IAFQ,EAGJyC,GADOlE,KAAKmE,OACI,GAHZ,cAKMnE,KAAKuB,GALX,IAKR,2BAAsB,CAAC,IACjB6C,EADgB,QACTC,QACXD,EAAGH,GAAKC,EACRlE,KAAKyB,GAAGlB,KAAK6D,IARP,iC,oBAYV,WACEpE,KAAKgC,QAAU,EACfhC,KAAKiC,SAAW,EAEhB,IAAK,IAAIoB,EAAE,EAAGA,EAAErD,KAAKuB,EAAEjB,OAAQ+C,IAC7BrD,KAAKuB,EAAE8B,GAAGiB,KAAKtE,KAAKyB,GAAG4B,IAGzBrD,KAAKiC,SAAW,I,wBAGlB,WAAc,IAAD,OACLsC,EAAa,SAACC,EAAUC,GAC5B,IAAK,IAAIpB,EAAE,EAAGA,EAAEC,KAAKoB,IAAIF,EAASlE,OAAQmE,EAASnE,QAAS+C,IAC1DoB,EAASpB,GAAKmB,EAASnB,GAEzB,OAAOoB,GAGTzE,KAAKa,EAAI,GACT,IAAK,IAAIwC,EAAE,EAAGA,EAAErD,KAAKwB,EAAElB,OAAQ+C,IAAK,CAClC,IAAI7B,EAAIxB,KAAKwB,EAAE6B,GACfrD,KAAKa,EAAEN,KAAKP,KAAKuB,EAAEC,EAAE,IAAIiC,WAAWzD,KAAKuB,EAAEC,EAAE,MAG/C,GAAIxB,KAAKF,IAAIQ,SAAWN,KAAKuB,EAAEjB,OAAQ,CACrCN,KAAKF,IAAM,GACX,IAAK,IAAIuD,EAAE,EAAGA,EAAErD,KAAKuB,EAAEjB,OAAQ+C,IAC7BrD,KAAKF,IAAIS,KAAK,IAAIkC,WAGtB,GAAIzC,KAAKU,eAAeJ,SAAWN,KAAKwB,EAAElB,OAAQ,CAChD,IAAMmE,EAAW,IAAI1B,MAAM/C,KAAKwB,EAAElB,QAAQ0C,KAAKjC,EAAM2C,mBACrD1D,KAAKU,eAAiB6D,EAAWvE,KAAKU,eAAgB+D,GAExD,GAAIzE,KAAK0B,QAAQpB,SAAWN,KAAKuB,EAAEjB,OAAQ,CACzC,IAAMmE,EAAW,IAAI1B,MAAM/C,KAAKuB,EAAEjB,QAAQ0C,MAAK,GAC/ChD,KAAK0B,QAAU6C,EAAWvE,KAAK0B,QAAS+C,GAE1C,GAAIzE,KAAKS,KAAKH,SAAWN,KAAKwB,EAAElB,OAAQ,CACtC,IAAMmE,EAAW,IAAI1B,MAAM/C,KAAKwB,EAAElB,QAAQ0C,KAAKjC,EAAM8C,kBACrD7D,KAAKS,KAAO8D,EAAWvE,KAAKS,KAAMgE,GAEpC,GAAIzE,KAAKY,WAAWN,SAAWN,KAAKwB,EAAElB,OAAQ,CAC5C,IAAMmE,EAAW,IAAI1B,MAAM/C,KAAKwB,EAAElB,QAAQ0C,MAAK,GAC/ChD,KAAKY,WAAa2D,EAAWvE,KAAKY,WAAY6D,GAEhD,GAAIzE,KAAKW,YAAYL,SAAWN,KAAKwB,EAAElB,OAAQ,CAC7C,IAAMmE,EAAW,IAAI1B,MAAM/C,KAAKwB,EAAElB,QAAQ0C,KAAK,GAC/ChD,KAAKW,YAAc4D,EAAWvE,KAAKW,YAAa8D,GAElD,GAAKzE,KAAK2B,OAAOrB,SAAWN,KAAK0C,aAC3B1C,KAAK2B,OAAOrB,QAAUN,KAAK2B,OAAO,GAAGrB,SAAWN,KAAK4C,WAC3D,CACE,IAAM6B,EAAW1B,MAAM/C,KAAK0C,aAAaM,MAAK,GAAO2B,KAAI,SAAAC,GAAC,OAAE7B,MAAM,EAAKH,YAAYI,MAAK,MAC7D,IAAvBhD,KAAK2B,OAAOrB,SAAcN,KAAK2B,OAAS8C,GAE5C,IAAK,IAAII,EAAS,EAAGA,EAASvB,KAAKoB,IAAI1E,KAAK2B,OAAOrB,OAAQmE,EAASnE,QAASuE,IAC3E,IAAK,IAAI7C,EAAQ,EAAGA,EAAQsB,KAAKoB,IAAI1E,KAAK2B,OAAO,GAAGrB,OAAQmE,EAAS,GAAGnE,QAAS0B,IAC/EyC,EAASI,GAAU7C,GAAWhC,KAAK2B,OAAOkD,GAAU7C,GAGxDhC,KAAK2B,OAAS8C,K,oBAKlB,WAEEzE,KAAK4B,EAAI,GACT,IAAK,IAAIyB,EAAE,EAAGA,EAAErD,KAAKuB,EAAEjB,OAAQ+C,IAC7BrD,KAAK4B,EAAErB,KAAK,IAAIkC,WAIlB,IAAK,IAAIY,EAAE,EAAGA,EAAErD,KAAKwB,EAAElB,OAAQ+C,IAAK,CAClC,IAAI7B,EAAIxB,KAAKwB,EAAE6B,GACX5B,EAAKzB,KAAKuB,EAAEC,EAAE,IAGdsD,EAFK9E,KAAKuB,EAAEC,EAAE,IAEL6C,QAAQU,IAAItD,GAErBuD,EAAKhF,KAAKS,KAAK4C,GACnB,GAAIrD,KAAKY,WAAWyC,GAAI,CACtB,IAAIwB,EAAW7E,KAAKW,YAAY0C,GAC5B5C,EAAOuE,EACPC,EAAOxE,GAAQ,EAAIT,KAAKU,eAAe2C,IAC3C2B,EAAKvE,EAAOT,KAAKiD,mBAAmB4B,IAAapE,EAAOwE,GAG1D,IACIrD,GADIkD,EAAIxE,SAAW0E,GACTjE,EAAMmE,EACpBtD,EAAIkD,EAAIK,YAAYvB,eAAehC,GACnC5B,KAAK4B,EAAEJ,EAAE,IAAI4D,IAAIxD,GACjB5B,KAAK4B,EAAEJ,EAAE,IAAI4D,IAAIxD,EAAEyD,UAIrB,IAAK,IAAIhC,EAAE,EAAGA,EAAErD,KAAKuB,EAAEjB,OAAQ+C,IACzBrD,KAAKsC,SACPtC,KAAK4B,EAAEyB,GAAG+B,IAAI,IAAI3C,UAAa,EAAG,GAAI1B,EAAMuE,cAAgBvE,EAAMuB,Y,uBAOxE,WACE,GAA2B,IAAvBtC,KAAK2B,OAAOrB,OAAc,OAAO,EAErC,GAAIN,KAAKiC,UAAajC,KAAKgC,QAAU,GAAKhC,KAAK4C,WAAc7B,EAAMwE,eAAiB,CAClFvF,KAAKgC,QAAUsB,KAAKkC,MAAMxF,KAAKiC,SAAWlB,EAAMwE,gBAAkBvF,KAAK4C,WAEvE,IAAK,IAAIiC,EAAS,EAAGA,EAAS7E,KAAK0C,YAAamC,IAC9C7E,KAAK8C,eAAe+B,GAAY7E,KAAK2B,OAAOkD,GAAU7E,KAAKgC,Y,kBAKjE,WAEE,IAF2B,IAAxByD,EAAuB,uDAArB,EAAGC,IAAkB,yDAEjBC,EAAM,EAAGA,EAAMF,EAAGE,IAAS,CAElC,GADA3F,KAAK8D,cACA9D,KAAKqC,SAAW,OAEjBqD,GACF1F,KAAK4F,YAEP5F,KAAK6F,SAED7F,KAAKoC,QAKT,IAAK,IAAIiB,EAAE,EAAGA,EAAErD,KAAK8C,eAAexC,OAAQ+C,IACtCrD,KAAK8C,eAAeO,IACtBrD,KAAKiD,mBAAmBI,IAAMtC,EAAM+E,uBAChC9F,KAAKiD,mBAAmBI,GAAK,IAC/BrD,KAAKiD,mBAAmBI,GAAK,KAI/BrD,KAAKiD,mBAAmBI,IAAMtC,EAAM+E,uBAChC9F,KAAKiD,mBAAmBI,GAAK,IAC/BrD,KAAKiD,mBAAmBI,GAAK,IAKnC,IAAK,IAAIA,EAAE,EAAGA,EAAErD,KAAKuB,EAAEjB,OAAQ+C,IAC7B,IAAIrD,KAAK0B,QAAQ2B,MAEbrD,KAAKkB,WAAW6E,aAAmC,IAApB/F,KAAK6B,QAAQwB,IAAhD,CAgBA,IAdArD,KAAKF,IAAIuD,GAAG+B,IAAIpF,KAAK4B,EAAEyB,GAAGgB,QAAQT,eAAe7C,EAAMiF,IACnDhG,KAAKuB,EAAE8B,GAAGY,GAAK,IAEbjE,KAAKuC,aACHvC,KAAKF,IAAIuD,GAAGU,EAAI,IAAG/D,KAAKF,IAAIuD,GAAGU,GAAM,EAAIhD,EAAMkF,gBAC/CjG,KAAKF,IAAIuD,GAAGW,EAAI,IAAGhE,KAAKF,IAAIuD,GAAGW,GAAM,EAAIjD,EAAMkF,kBAGnDjG,KAAKF,IAAIuD,GAAGU,GAAM,EAAIhD,EAAMkF,eAC5BjG,KAAKF,IAAIuD,GAAGW,GAAM,EAAIjD,EAAMkF,iBAIhCjG,KAAKF,IAAIuD,GAAGO,eAAe7C,EAAMmF,cAC1BlG,KAAKF,IAAIuD,GAAG/C,SAAW,GAC5BN,KAAKF,IAAIuD,GAAGO,eAAe,IAG7B5D,KAAKuB,EAAE8B,GAAG+B,IAAIpF,KAAKF,IAAIuD,GAAGgB,QAAQT,eAAe7C,EAAMiF,IAIzD,IAAK,IAAI3C,EAAE,EAAGA,EAAErD,KAAKuB,EAAEjB,OAAQ+C,IACzBrD,KAAKuB,EAAE8B,GAAGY,EAAI,IAEhBjE,KAAKuB,EAAE8B,GAAGY,EAAI,EACdjE,KAAKF,IAAIuD,GAAGY,GAAKjE,KAAKF,IAAIuD,GAAGY,GAIjCjE,KAAKiC,UAAY,EAGnB,OAAOjC,KAAKuB,I,sBAoCd,SAAS4E,GACP,IAAI5E,EAAI,IAAIkB,UACZlB,EAAE+C,KAAKtE,KAAKuB,EAAE4E,IACd,IAAIrB,EAAM,IAAIrC,UAAa1B,EAAMqF,iBAAkB,EAAG,GACtD7E,EAAIA,EAAE6D,IAAIN,GACV9E,KAAKuB,EAAEhB,KAAKgB,GAEZ,IAAIC,EAAI,CAAC2E,EAAQnG,KAAKuB,EAAEjB,OAAS,GACjCN,KAAKwB,EAAEjB,KAAKiB,K,sBAGd,SAAS6E,GACP,IAAK,IAAIhD,EAAE,EAAGA,EAAEgD,EAAQ/F,OAAQ+C,IAC9B,IAAK,IAAIiD,EAAEjD,EAAE,EAAGiD,EAAED,EAAQ/F,OAAQgG,IAAK,CACrC,IADqC,EACjCC,GAAW,EADsB,cAEvBvG,KAAKwB,GAFkB,IAErC,2BAAsB,CAAC,IAAdA,EAAa,QACpB,GAAIA,EAAEgF,SAASH,EAAQhD,KAAO7B,EAAEgF,SAASH,EAAQC,IAAK,CACpDC,GAAW,EACX,QALiC,8BAQjCA,GAAUvG,KAAKwB,EAAEjB,KAAK,CAAC8F,EAAQhD,GAAIgD,EAAQC,Q,yBAKrD,SAAYH,GACV,IAAI,CAAC,EAAE,EAAE,EAAE,GAAGK,SAASL,GAAvB,CAEAnG,KAAKyG,sBAEL,IALkB,EAKZC,EAAM,GAENnF,EAAI7B,EAAOW,IAAI8F,GAPH,cAQH5E,EAAErB,IARC,IAQlB,2BAAqB,CAAC,IAAbyG,EAAY,QACnBD,EAAInG,KAAKoG,IATO,8BAYlBjH,EAAOW,IAAMX,EAAOW,IAAIuG,QAAO,SAAAxC,GAAE,OAAEA,IAAO7C,KAC1Cf,EAAKH,IAAMG,EAAKH,IAAIuG,QAAO,SAAAD,GAAE,OAAGD,EAAIF,SAASG,MAE7C3G,KAAK6G,6B,wBAGP,SAAWC,M,iCAKX,WACEpH,EAAOW,IAAM,GACb,IAAK,IAAIgD,EAAI,EAAGA,EAAIrD,KAAKuB,EAAEjB,OAAQ+C,IACjC,IAAI3D,EAAOM,KAAKuB,EAAE8B,GAAIrD,KAAK0B,QAAQ2B,GAAIrD,KAAKyB,GAAG4B,GAAIrD,KAAKF,IAAIuD,GAAIrD,KAAK4B,EAAEyB,IAEzE7C,EAAKH,IAAM,GACX,IAAK,IAAIgD,EAAI,EAAGA,EAAIrD,KAAKwB,EAAElB,OAAQ+C,IACjC,IAAI7C,EAAKR,KAAKwB,EAAE6B,GAAIrD,KAAKS,KAAK4C,GAAIrD,KAAKU,eAAe2C,GAAIrD,KAAKW,YAAY0C,GAAIrD,KAAKY,WAAWyC,GAAIrD,KAAKa,EAAEwC,M,qCAK9G,WACErD,KAAKuB,EAAI,GACTvB,KAAK0B,QAAU,GACf1B,KAAKyB,GAAK,GACVzB,KAAKF,IAAM,GACXE,KAAK4B,EAAI,GALe,oBAMVlC,EAAOW,KANG,IAMxB,2BAA0B,CAAC,IAAlBkB,EAAiB,QACxBvB,KAAKuB,EAAEhB,KAAKgB,EAAE5B,KACdK,KAAK0B,QAAQnB,KAAKgB,EAAE3B,OACpBI,KAAKyB,GAAGlB,KAAKgB,EAAE1B,MACfG,KAAKF,IAAIS,KAAKgB,EAAEzB,KAChBE,KAAK4B,EAAErB,KAAKgB,EAAEK,IAXQ,8BAcxB5B,KAAKwB,EAAI,GACTxB,KAAKS,KAAO,GACZT,KAAKU,eAAiB,GACtBV,KAAKW,YAAc,GACnBX,KAAKY,WAAa,GAClBZ,KAAKa,EAAI,GAnBe,oBAoBVL,EAAKH,KApBK,IAoBxB,2BAAwB,CAAC,IAAhBmB,EAAe,QAClBvB,EAAK,CAACuB,EAAEvB,GAAG,GAAGG,GAAIoB,EAAEvB,GAAG,GAAGG,IAC9BJ,KAAKwB,EAAEjB,KAAKN,GACZD,KAAKS,KAAKF,KAAKiB,EAAEf,MACjBT,KAAKU,eAAeH,KAAKiB,EAAEd,gBAC3BV,KAAKW,YAAYJ,KAAKiB,EAAEb,aACxBX,KAAKY,WAAWL,KAAKiB,EAAEZ,YACvBZ,KAAKa,EAAEN,KAAKiB,EAAEX,IA3BQ,8BA8BxBb,KAAK6B,QAAU,IAAIkB,MAAM/C,KAAKuB,EAAEjB,QAAQ0C,KAAK,GAC7ChD,KAAK8B,QAAU,IAAIiB,MAAM/C,KAAKwB,EAAElB,QAAQ0C,KAAK,K,sBAW/C,WAAoB,IAAD,EAAVvB,EAAU,wDACbsF,EAAS,IAAItE,UAAa,EAAG,EAAG,GAC9BxC,EAAKwB,EAAKzB,KAAKyB,GAAKzB,KAAKuB,EAFd,cAGHtB,GAHG,IAGjB,2BAAkB,CAAC,IAAVsB,EAAS,QAChBwF,EAAO3B,IAAI7D,IAJI,8BAOjB,OADAwF,EAAOpD,aAAa3D,KAAKuB,EAAEjB,QACpByG,I,oBAGT,WAGE,IAFA,IAAMC,EAAQhH,KAAKiH,UAAS,GACtBC,EAAOlH,KAAKiH,UAAS,GAClB5D,EAAE,EAAGA,EAAErD,KAAKuB,EAAEjB,OAAQ+C,IAC7BrD,KAAKuB,EAAE8B,GAAG0B,IAAImC,GACdlH,KAAKuB,EAAE8B,GAAG+B,IAAI4B,K,4BAIlB,WACE,IAAIG,EAAI,IAAIhF,KACZ,OAAOnC,KAAKiC,WAAakF,EAAEC,UAAYpH,KAAKkC,UAAUkF,WAAa,O,kBAGrE,WACE,IAAIC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAClCL,EAAOC,EAAOC,GAAQI,IACtBH,EAAOC,EAAOC,EAAOC,IAHhB,oBAIS3H,KAAKuB,GAJd,IAIL,2BAAsB,CAAC,IAAdA,EAAa,QAChBA,EAAEwC,EAAIsD,IAAMA,EAAO9F,EAAEwC,GACrBxC,EAAEyC,EAAIsD,IAAMA,EAAO/F,EAAEyC,GACrBzC,EAAE0C,EAAIsD,IAAMA,EAAOhG,EAAE0C,GACrB1C,EAAEwC,EAAIyD,IAAMA,EAAOjG,EAAEwC,GACrBxC,EAAEyC,EAAIyD,IAAMA,EAAOlG,EAAEyC,GACrBzC,EAAE0C,EAAIyD,IAAMA,EAAOnG,EAAE0C,IAVtB,8BAYL,MAAO,CAACoD,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,K,wBAGxC,WACE,MAAO,WAAY1H,KAAKuB,EAAEjB,S,uBAG5B,WACE,MAAO,cAAgBN,KAAKwB,EAAElB,S,uBAGhC,SAAUsH,GACR,IAAK,IAAIvE,EAAE,EAAGA,EAAEuE,EAAItH,OAAQ+C,IAAK,CACtBuE,EAAIvE,GACbwE,MAAM,sB,sBAOV,WACE7H,KAAK0B,QAAU,GACf1B,KAAK0B,QAAU,IAAIqB,MAAM/C,KAAKuB,EAAEjB,QAAQ0C,MAAK,K,oBAG/C,SAAOe,EAAGC,EAAGC,GACXjE,KAAK8H,SAEL,IAAIf,EAAS/G,KAAKiH,WACdc,EAAe,IAAItF,QACvBsF,EAAaC,eAAehI,KAAKwC,MAAMyF,YAAY5C,SAAU,OAC7DrF,KAAKwC,MAAO,IAAIC,QAAWsB,EAAGC,EAAGC,GAEjC,IAAK,IAAIZ,EAAE,EAAGA,EAAErD,KAAKuB,EAAEjB,OAAQ+C,IAC7BrD,KAAKuB,EAAE8B,GAAG0B,IAAIgC,GACd/G,KAAKuB,EAAE8B,GAAG6E,WAAWH,GACrB/H,KAAKuB,EAAE8B,GAAG6E,WAAWlI,KAAKwC,OAC1BxC,KAAKuB,EAAE8B,GAAG+B,IAAI2B,GAGhB/G,KAAKsB,c,KAhkBHP,EACGmE,EAAI,IADPnE,EAEGiF,EAAI,KAFPjF,EAGGmF,aAAe,KAHlBnF,EAIGoH,oBAAsB,KAJzBpH,EAKGqH,iBAAmB,EALtBrH,EAMG2C,kBAAoBJ,KAAK+E,MAAMtH,EAAMoH,oBAAsBpH,EAAMqH,iBAAmB,KAAM,IAN7FrH,EAOG+E,uBAAyB,KAP5B/E,EAQGuE,cAAgB,IARnBvE,EASGuB,QAAU,EATbvB,EAUGqF,iBAAmB,IAVtBrF,EAWG8C,iBAAmB9C,EAAMqF,kBAAoB,EAAIrF,EAAM2C,mBAX1D3C,EAYGkF,eAAiB,GAZpBlF,EAaGwE,eAAiB,EAAIxE,EAAMiF,EAb9BjF,EAcG8B,kBAAoB,EAdvB9B,EAeG4B,mBAAqB,EAfxB5B,EA2eGuH,eAAiB,SAACC,GACvB,IAD+B,EAC3BlF,EAAI,EADuB,cAEjBkF,EAAIlI,KAFa,IAE/B,2BAAuB,SACnBD,GAAKiD,EACPA,GAAK,GAJwB,gC,eC3iBpB,I,8CCSfmF,YAAO,CAACC,oBAER,IAAMC,EAAS,IAAIC,QAAY,GAAK,GAAK,IACnCC,EAAY,CAChB,IAAID,QAAY,GAAK,GAAK,IAC1B,IAAIA,QAAY,GAAK,GAAK,IAC1B,IAAIA,QAAY,GAAK,GAAK,IAC1B,IAAIA,QAAY,GAAK,GAAK,IAC1B,IAAIA,QAAY,GAAK,GAAK,KAGtBE,GADa,IAAIF,QAAY,EAAG,EAAG,GAC1B,IAAIA,QAAY,IAAM,IAAM,MACrCG,EAAY,IAAIH,QAAY,GAAK,GAAK,IACtCI,EAAW,IAAIJ,QAAY,GAAK,GAAK,IACrCK,EAAS,IAAIL,QAAY,GAAK,GAAK,IACnCM,EAAW,IAAIN,QAAY,IAAM,IAAM,KAOvCO,EAAQ,IAKd,SAASC,EAAT,GAA8G,IAA/F5H,EAA8F,EAA9FA,EAAG6H,EAA2F,EAA3FA,EAAGC,EAAwF,EAAxFA,EAAGC,EAAqF,EAArFA,MAAOC,EAA8E,EAA9EA,YAAaC,EAAiE,EAAjEA,kBAAmBC,EAA8C,EAA9CA,iBAAkBC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,YAEvFC,EAAKC,mBACLC,EAAWD,mBACXE,EAAgBF,mBAJqF,EAK3EG,oBAAS,GALkE,mBAKpGC,EALoG,KAK1FC,EAL0F,KAMrGC,EAAU,IAAIxB,UA4CpB,OA1CAyB,aAAS,SAACC,GAIR,GAHAT,EAAKU,QAAQC,SAASjG,KAAK/C,GAC3BuI,EAASQ,QAAQE,MAAMlG,KAAK+E,GAExBM,EAAa,CACf,IAAM1I,EAAW8I,EAAcO,QAC3BL,GACF1I,EAAE+C,KAAKrD,EAASwJ,cAAcpG,QAAQe,IAAInE,EAASsJ,WACnDX,EAAKU,QAAQC,SAASjG,KAAK/C,IAG3BwI,EAAcO,QAAQC,SAASjG,KAAK/C,OAK1CmJ,qBAAU,WACR,IAAMC,EAA0B,SAACnJ,GAC/BkI,GAAclI,EAAEoJ,OAChBV,EAAY1I,EAAEoJ,OAEd,IAAM3J,EAAWO,EAAEqJ,QACJ,IAAXrJ,EAAEoJ,OACJ3J,EAAS6J,OAAOP,SAAS3G,eAAe,GACxC0F,EAAMjH,UAAS,IAGfiH,EAAMjH,UAAS,EACf8H,EAAQ7F,KAAKrD,EAASwJ,iBAIpBxJ,EAAW8I,EAAcO,QAE/B,GADArJ,EAASsJ,SAASjG,KAAK/C,GACnBN,EAEF,OADAA,EAAS8J,iBAAiB,mBAAoBJ,GACvC,WACL1J,EAAS+J,oBAAoB,mBAAoBL,OAMrD,cAACM,EAAA,EAAD,CACEC,IAAKnB,EACLoB,QAASxB,EACTyB,MAAOzB,EACP0B,MAAO1B,EACP2B,MAAO3B,EACP4B,KAAM,YACNC,MAAO,QAPT,SASE,uBACEN,IAAKtB,EACLW,SAAUhJ,EACVkK,YAAY,EACZC,MAAO,CAACtC,EAAGA,EAAGA,GACduC,QAASpC,EACTqC,cAAepC,EACfqC,aAAcpC,EAPhB,UASE,sCAAsBqC,KAAM,CAAC,EAAG,GAAI,MACpC,sCACEZ,IAAKpB,EACLU,MAAOnB,SAOjB,SAAS0C,EAAT,GAA0D,IAA1CxK,EAAyC,EAAzCA,EAAGT,EAAsC,EAAtCA,GAAIwI,EAAkC,EAAlCA,MAAOI,EAA2B,EAA3BA,aAAcxI,EAAa,EAAbA,WAAa,GACrCoI,EAAMzH,QAAQf,GACfwI,EAAMzH,QAAQf,GAEOkJ,oBAAS,IAJQ,mBAIhDL,EAJgD,KAInCqC,EAJmC,KAKjDxB,EAAQ,IAAI7B,QAElByB,aAAS,SAAC6B,GACR,IAAMC,EAAkC,IAAtB5C,EAAMzH,QAAQf,GAC1BqL,EAAiC,IAAtB7C,EAAMzH,QAAQf,GACzBlB,EAAQ0J,EAAM5H,QAAQZ,GAC5B0J,EAAMlG,KAAK4H,EAASpD,EAAUqD,EAAQpD,EAASnJ,EAAMoJ,EAAON,GACxDxH,EAAW6E,aAAqC,IAAtBuD,EAAMzH,QAAQf,KAAc6I,GACxDqC,GAAe,GAEX9K,EAAW6E,aAAqC,IAAtBuD,EAAMzH,QAAQf,KAAc6I,GAC1DqC,GAAe,MAqCnB,OACE,cAAC7C,EAAD,CAAmB5H,EAAGA,EAAG6H,EAzId,IA0ILE,MAAOA,EACPC,YApCY,SAAC/H,GACfN,EAAWkL,eACb9C,EAAM+C,YAAYvL,GAClBwI,EAAMxF,aACNwF,EAAMhI,UACNgI,EAAMgD,eAEApL,EAAWqL,aACjBjD,EAAMkD,SAAS1L,GACfwI,EAAMxF,aACNwF,EAAMhI,UACNgI,EAAMgD,eAECpL,EAAW6E,aAClBuD,EAAMzH,QAAQmB,KAAK,GACnBsG,EAAMzH,QAAQf,GAAM,GAGpBwI,EAAMzH,QAAQf,GAAM,EAEtBI,EAAWuL,YACXjL,EAAEkL,mBAgBIlD,kBAbkB,SAAChI,GACC,IAAtB8H,EAAMzH,QAAQf,KAAWwI,EAAMzH,QAAQf,GAAM,GACjDU,EAAEkL,mBAYIjD,iBAViB,SAACjI,GACE,IAAtB8H,EAAMzH,QAAQf,KAAWwI,EAAMzH,QAAQf,GAAM,GACjDU,EAAEkL,mBASIhD,aAAcA,EACdC,YAAaA,EACbN,EAAGmB,GAPE,QAWf,SAASmC,EAAT,GAAsF,IAAnElL,EAAkE,EAAlEA,GAAImL,EAA8D,EAA9DA,GAAIxD,EAA0D,EAA1DA,EAAGC,EAAuD,EAAvDA,EAAGE,EAAoD,EAApDA,YAAaC,EAAuC,EAAvCA,kBAAmBC,EAAoB,EAApBA,iBACzDG,EAAOC,mBACPC,EAAWD,mBAEXhE,EAAS,SAACpE,EAAImL,GAClB,IAAMjN,EAAM8B,EAAG4C,QAAQe,IAAIwH,GAAIjJ,aAAa,GACtCmB,EAAM8H,EAAGvI,QAAQU,IAAItD,GACrBoL,EAAO,IAAIlE,UAAc,EAAG,EAAG,GAE/B9H,EAAIiE,EAAIxE,SACdwE,EAAIK,YAEJ,IAAM2H,GAAa,IAAInE,cAAmBoE,mBAAmBF,EAAM/H,GAEnE,MAAO,CAACnF,EAAKkB,GADC,IAAI8H,SAAcqE,kBAAkBF,KAb+B,EAiB3DjH,EAAOpE,EAAImL,GAjBgD,mBAiB5EjN,EAjB4E,KAiBvEkB,EAjBuE,KAiBpE2B,EAjBoE,KA2BnF,OARA4H,aAAS,SAACC,GAAS,IAAD,EACQxE,EAAOpE,EAAImL,GADnB,mBACTjN,EADS,KACJkB,EADI,KACD2B,EADC,KAEhBoH,EAAKU,QAAQC,SAASjG,KAAK3E,GAC3BiK,EAAKU,QAAQ2C,SAAS3I,KAAK9B,GAC3BoH,EAAKU,QAAQoB,MAAM,GAAK7K,EACxBiJ,EAASQ,QAAQE,MAAMlG,KAAK+E,MAI5B,uBACE6B,IAAKtB,EACLW,SAAU,CAAC5K,EAAIoE,EAAGpE,EAAIqE,EAAGrE,EAAIsE,GAC7BgJ,SAAUzK,EACViJ,YAAY,EACZC,MAAO,CAACtC,EAAGvI,EAAGuI,GACduC,QAASpC,EACTqC,cAAepC,EACfqC,aAAcpC,EARhB,UAUE,wCAAwBqC,KAAM,CAAC,EAAG,EAAG,EAAG,MACxC,qCACEZ,IAAKpB,EACLU,MAAOnB,OAMf,SAAS6D,EAAT,GACkB,IADHzL,EACE,EADFA,GAAImL,EACF,EADEA,GAAIO,EACN,EADMA,GAAI7D,EACV,EADUA,MAAOpI,EACjB,EADiBA,WAE5B4D,EAAM8H,EAAGvI,QAAQU,IAAItD,GACjBqD,EAAIxE,SACZwE,EAAIK,YACJ,IAAMiI,EAAYtI,EAAIT,QAAQT,eA3MhB,MA4MRyJ,EAAUvI,EAAIT,QAAQT,eA3MhB,KA4MN0J,EAAgBxI,EAAIT,QAAQT,eA9MhB,KAgNZ2J,EAAQF,EAAQhJ,QAAQe,IAAI3D,GAC5B+L,EAAQD,EAAMlJ,QAAQe,IAAIgI,GAC1BK,EAAOb,EAAGvI,QAAQU,IAAIsI,GACtBK,EAAOD,EAAKpJ,QAAQU,IAAIqI,GACxBO,EAAUlM,EAAG4C,QACbuJ,EAAUnM,EAAG4C,QAAQe,IAAIiI,GACzBQ,EAAUjB,EAAGvI,QACbyJ,EAAUlB,EAAGvI,QAAQU,IAAIsI,GACzBU,EAAeN,EAAKpJ,QAAQU,IAAID,EAAIT,QAAQT,eAChD0F,EAAM7I,KAAK0M,IAAO7D,EAAMvI,MAAM2C,kBAAoB4F,EAAM5I,eAAeyM,MACnEa,EAAeD,EAAa1J,QAAQe,IAAIkI,GAExCW,EAAO,IAAItF,QACXuF,EAAM,IAAIvF,QACVwF,EAAS,IAAIxF,QACbyF,EAAQ,IAAIzF,QAEZ0F,EAAa,WACjB,GAAInN,EAAWoN,YAAa,CAC1B,IAAMpC,EAAkC,IAAtB5C,EAAMxH,QAAQqL,GAC1BhB,EAAiC,IAAtB7C,EAAMxH,QAAQqL,GACzB9D,EAAIT,EAAUU,EAAM3I,YAAYwM,IACtCc,EAAK3J,KAAK4H,EAAWpD,EAAYqD,EAAUpD,EAAWM,GACtD6E,EAAI5J,KAAK4H,EAAWpD,EAAYqD,EAAUpD,EAAWM,GACrD8E,EAAO7J,KAAK4H,EAAWpD,EAAYqD,EAAUpD,EAAWM,GACxD+E,EAAM9J,KAAK4H,EAAWpD,EAAYqD,EAAUpD,EAAWM,OAEpD,CACH,IAAM6C,EAAkC,IAAtB5C,EAAMxH,QAAQqL,GAC1BhB,EAAiC,IAAtB7C,EAAMxH,QAAQqL,GAC/Bc,EAAK3J,KAAK4H,EAAWpD,EAAYqD,EAAUpD,EAAWF,GACtDqF,EAAI5J,KAAK4H,EAAWpD,EAAYqD,EAAUpD,EAAWL,GACrDyF,EAAO7J,KAAK4H,EAAWpD,EAAYqD,EAAUpD,EAAWL,GACxD0F,EAAM9J,KAAK4H,EAAWpD,EAAYqD,EAAUpD,EAAWE,KAG3DoF,IAEAjE,aAAS,SAACC,GACR,IAAIvF,EAAM8H,EAAGvI,QAAQU,IAAItD,GACjBqD,EAAIxE,SACZwE,EAAIK,YACJ,IAAMiI,EAAYtI,EAAIT,QAAQT,eAzPlB,MA0PNyJ,EAAUvI,EAAIT,QAAQT,eAzPlB,KA0PJ0J,EAAgBxI,EAAIT,QAAQT,eA5PlB,KA6PhB2J,EAAMjJ,KAAK+I,EAAQhJ,QAAQe,IAAI3D,IAC/B+L,EAAMlJ,KAAKiJ,EAAMlJ,QAAQe,IAAIgI,IAC7BK,EAAKnJ,KAAKsI,EAAGvI,QAAQU,IAAIsI,IACzBK,EAAKpJ,KAAKmJ,EAAKpJ,QAAQU,IAAIqI,IAC3BO,EAAQrJ,KAAK7C,EAAG4C,SAChBuJ,EAAQtJ,KAAK7C,EAAG4C,QAAQe,IAAIiI,IAC5BQ,EAAQvJ,KAAKsI,EAAGvI,SAChByJ,EAAQxJ,KAAKsI,EAAGvI,QAAQU,IAAIsI,IAC5BU,EAAazJ,KAAKmJ,EAAKpJ,QAAQU,IAAID,EAAIT,QAAQT,eAC7C0F,EAAM7I,KAAK0M,IAAO7D,EAAMvI,MAAM2C,kBAAoB4F,EAAM5I,eAAeyM,OACzEa,EAAa1J,KAAKyJ,EAAa1J,QAAQe,IAAIkI,IAE3Ce,OAGF,IAAM9E,EAAc,SAAC/H,GACnB8H,EAAMxH,QAAQqL,GAAM,EACpB3L,EAAEkL,mBAEElD,EAAoB,SAAChI,GACC,IAAtB8H,EAAMxH,QAAQqL,KAAY7D,EAAMxH,QAAQqL,GAAM,GAClD3L,EAAEkL,mBAEEjD,EAAmB,SAACjI,GACE,IAAtB8H,EAAMxH,QAAQqL,KAAY7D,EAAMxH,QAAQqL,GAAM,GAClD3L,EAAEkL,mBAGE6B,EAAY,CAChB,cAAC5B,EAAD,CAAoBlL,GAAI8L,EAAOX,GAAIY,EAAOpE,EA5RjC,IA4R0CC,EAAG4E,EAC5C1E,YAAaA,EAAaC,kBAAmBA,EAAmBC,iBAAkBA,GAD9E,OAEd,cAACkD,EAAD,CAAmBlL,GAAIgM,EAAMb,GAAIc,EAAMtE,EA/R/B,IA+RuCC,EAAG6E,EACxC3E,YAAaA,EAAaC,kBAAmBA,EAAmBC,iBAAkBA,GAD9E,MAEd,cAACkD,EAAD,CAAuBlL,GAAIkM,EAASf,GAAIgB,EAASxE,EAAGF,EAAOG,EAAG8E,EACpD5E,YAAaA,EAAaC,kBAAmBA,EAAmBC,iBAAkBA,GAD9E,UAEd,cAACkD,EAAD,CAAuBlL,GAAIqM,EAASlB,GAAIiB,EAASzE,EAAGF,EAAOG,EAAG8E,EACpD5E,YAAaA,EAAaC,kBAAmBA,EAAmBC,iBAAkBA,GAD9E,WAOhB,OAJIH,EAAM5I,eAAeyM,KAAQ7D,EAAMvI,MAAM2C,mBAC3C6K,EAAUhO,KAAK,cAACoM,EAAD,CAA2BlL,GAAIsM,EAAcnB,GAAIoB,EAAc5E,EArS9D,IAqS8EC,EAAGR,GAApE,eAG3BS,EAAM1I,WAAWuM,GACXoB,EAIN,CAAC,cAAC5B,EAAD,CAAqBlL,GAAIA,EAAImL,GAAIA,EAAIxD,EAAGF,EAAOG,EAAG+E,EACzC7E,YAAaA,EAAaC,kBAAmBA,EAAmBC,iBAAkBA,GAD7E,SAkFrB,SAAS+E,EAAT,GAII,IAHFlF,EAGC,EAHDA,MACApI,EAEC,EAFDA,WACAwI,EACC,EADDA,aACC,EAEe+E,IAAMzE,SAAS,IAAIrB,SAA5B+F,EAFN,oBAGDtE,aAAS,SAACC,GACR,IAAMsE,EAAsB,IAjYpB,GAiYkCD,EAAME,WAChDC,YAAW,WAEPxE,EAAMyE,OAAM,EACZzE,EAAM0E,eAERzL,KAAK0L,IAAI,EAAGL,IAEdtE,EAAMyE,OAAM,EACgBxF,EAAMvI,MAAMiF,EACxCsD,EAAM2F,KAAK3L,KAAKkC,MAAO,IAAM8D,EAAMvI,MAAMiF,EA3YjC,OA4YP,GAGH,IAlBC,EAkBKkJ,EAAO,GACPC,EAAM,GAnBX,cAsBkB7F,EAAM/H,EAAE6N,WAtB1B,IAsBD,2BAAsC,CAAC,IAAD,yBAA5B/L,EAA4B,KAAzB9B,EAAyB,KACpC2N,EAAO3O,KACL,cAACwL,EAAD,CAEExK,EAAGA,EACHT,GAAIuC,EACJiG,MAAOA,EACPI,aAAcA,EACdxI,WAAYA,GALN,IAAMmO,OAAOhM,MAzBxB,kDAmCkBiG,EAAM9H,EAAE4N,WAnC1B,IAmCD,2BAAsC,CAAC,IAAD,yBAA5B/L,EAA4B,KAAzB7B,EAAyB,KAC9BC,EAAK6H,EAAM/H,EAAEC,EAAE,IACfoL,EAAKtD,EAAM/H,EAAEC,EAAE,IACrB2N,EAAM5O,KACJ,cAAC2M,EAAD,CAEEzL,GAAIA,EACJmL,GAAIA,EACJO,GAAI9J,EACJiG,MAAOA,EACPpI,WAAYA,EACZgL,SAAU1K,EAAE0K,SACZC,QAAS3K,EAAE2K,SAPL,IAAIkD,OAAOhM,MAxCtB,8BA2DD,MAAM,GAAN,OAAY6L,EAAWC,GAIzB,SAASG,IACP,IAAMC,EAAQ,IAAI5G,mBAAuB,IAAIA,QAAY,EAAE,EAAE,GAAI,KACjE4G,EAAMhF,SAASiF,IAAI,EAAG,EAAG,GACzBD,EAAM9D,YAAa,EAUnB,OARA8D,EAAME,OAAOC,QAAQC,MAAQ,KAC7BJ,EAAME,OAAOC,QAAQE,OAAS,KAC9BL,EAAME,OAAOI,OAAOC,KAAM,GAC1BP,EAAME,OAAOI,OAAOE,MAAQ,GAC5BR,EAAME,OAAOI,OAAOG,MAAO,GAC3BT,EAAME,OAAOI,OAAOI,OAAS,GAC7BV,EAAME,OAAOI,OAAOK,KAAO,GAC3BX,EAAME,OAAOI,OAAOM,IAAM,IAClB,2BAAWrF,OAAQyE,IAxc7Ba,OAAOC,IADK,GA4cZ,IAAMC,EAAW,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAAe,EAK5BC,cAFFX,EAH8B,EAG9BA,OACMY,EAJwB,EAI9BC,GAAMD,WAKR,OAFArG,aAAS,kBAAMmG,EAAUjG,QAAQzE,YAE1B,+BAAeqF,IAAKqF,EAAWzE,KAAM,CAAC+D,EAAQY,MA+DxCE,MA5Df,YAAsC,IAArBrH,EAAoB,EAApBA,MAAOpI,EAAa,EAAbA,WAChBqP,EAAY1G,mBAClBP,EAAMrI,SAAWsP,EAFkB,MAGXK,sBAAW,SAAA7M,GAAO,OAAQA,EAAE,IAAK,GAAhDuI,EAH0B,oBAUnC,OANAhD,EAAMgD,YAAcA,EAOhB,eAAC,IAAD,CACEuE,WAAW,EACXC,YAAY,EACZC,UAAW,YAAmB,IAAjBL,EAAgB,EAAhBA,GACPM,GADuB,EAAZnB,OACC,KAChBa,EAAGO,cAAc,IAAItI,QAAYqI,EAAWA,EAAWA,IACvDN,EAAGQ,cAAcd,OAAOe,kBACxBT,EAAGG,UAAU1F,SAAQ,EACrBuF,EAAGG,UAAUO,KAAKzI,oBAEpBkH,OAAQ,CACNwB,IAAK,GACL9G,SAAS,CAAC,GAAI,GAAI,GAClB+G,GAAG,CAAC,EAAG,EAAG,IAGZZ,GAAI,CAACa,WAAU,GAhBjB,UAkBE,cAAC,EAAD,CAAUhB,UAAWA,IACrB,8BACE/F,MAAO,IAAI7B,QAAY,EAAG,EAAG,GAC7BqI,UAAW,KAGb,cAAC1B,EAAD,IAEA,uBACE/E,SAAU,CAAC,EAAG,EAAG,GACjBiH,eAAe,EACfC,SAAS,EAHX,UAKE,+BAAe3F,KAAM,CAAC,IAAO,OAC7B,gCAAgB4F,QAAS,QAG3B,4BACE5F,KAAM,CAAC,IAAK,KACZ6F,cAAarO,KAAKsO,GAAG,EACrBC,aAAY,EACZJ,SAAS,IAGX,cAACjD,EAAD,CAAUlF,MAAOA,EAAOpI,WAAYA,EAAYwI,aA/CtD,SAAsBoI,GACpBvB,EAAUjG,QAAQa,QAAU2G,KA+CxB,cAACC,EAAA,EAAD,Q,kNCriBFC,GAAc,2BAKdpJ,GAAY,CAChB,qBACA,qBACA,qBACA,qBACA,sBAOIqJ,GAAgB,GAEhBC,GAAe,GAIfC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACP/H,SAAU,WACVwF,MAAO,QACPD,IAAK,QACLH,MAAO,OACPC,OAAQ,OACR2C,WAAYP,GACZ,kBAAoB,CAClB,sBAAwB,CACtBQ,UAAW,SAIjBC,WAAY,CACVlI,SAAU,WACVwF,MAAO,OACPD,IAAK,QACLH,MAAO,OAEP4C,WAAYP,IAEdU,UAAW,CACTnI,SAAU,WACVyF,KAAM,MACNC,OAAQ,MACRsC,WAAYP,IAEdW,iBAAkB,CAChBpI,SAAU,WACVwF,MAAO,OACPD,IAAK,OACLH,MAAO,OACP4C,WAAYP,QAIhB,SAASY,GAAT,GAA4C,IAApBtJ,EAAmB,EAAnBA,MAAOmD,EAAY,EAAZA,UACvBoG,EAAQ,GAGX,YAAI9P,MAAMuG,EAAM9H,EAAElB,QAAQwS,QAAQC,OAAM,SAAA5F,GAAE,OAClB,IAAtB7D,EAAMxH,QAAQqL,IAAqC,IAAtB7D,EAAMxH,QAAQqL,KAAsC,IAAzB7D,EAAM1I,WAAWuM,MAI3E,YAAIpK,MAAMuG,EAAM9H,EAAElB,QAAQwS,QAAQC,OAAM,SAAA5F,GAAE,OAClB,IAAtB7D,EAAMxH,QAAQqL,IAAqC,IAAtB7D,EAAMxH,QAAQqL,KAAsC,IAAzB7D,EAAM1I,WAAWuM,MA4C9E,OAzCA0F,EAAMtS,KACJ,cAACyS,EAAA,EAAD,CAAMC,MAAI,EAAgBC,MAAO,CAACvD,MAAO,MAAOwD,UAAW,UAA3D,SACA,cAACC,EAAA,EAAD,CACEC,KAAM,QACN1H,QAAS,WACL,IAAK,IAAIwB,EAAK,EAAGA,EAAK7D,EAAM9H,EAAElB,OAAQ6M,IACV,IAAtB7D,EAAMxH,QAAQqL,KAChB7D,EAAM1I,WAAWuM,IAAM,GAG3BV,IACAoC,WAAWvF,EAAMgD,YAAa,KATpC,SAaE,cAACgH,EAAA,EAAD,OAdc,WAmBlBT,EAAMtS,KACJ,cAACyS,EAAA,EAAD,CAAMC,MAAI,EAAiBC,MAAO,CAACvD,MAAO,MAAOwD,UAAW,UAA5D,SACA,cAACC,EAAA,EAAD,CACEC,KAAM,QACN1H,QAAS,WACL,IAAK,IAAIwB,EAAK,EAAGA,EAAK7D,EAAM9H,EAAElB,OAAQ6M,IACV,IAAtB7D,EAAMxH,QAAQqL,KAChB7D,EAAM1I,WAAWuM,IAAM,GAG3BV,IACAoC,WAAWvF,EAAMgD,YAAa,KATpC,SAaE,cAACiH,EAAA,EAAD,OAdc,YAqBhB,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcP,MAAO,CAACvD,MAAO,OAA7B,8BAGA,cAACqD,EAAA,EAAD,CAAMU,WAAS,EAACR,MAAO,CAACvD,MAAO,OAA/B,SACGkD,OAMT,SAASc,GAAT,GAGE,IAH8C,IAAvBlO,EAAsB,EAAtBA,EAAG6D,EAAmB,EAAnBA,MAAOmD,EAAY,EAAZA,UAC3BoG,EAAQ,GAD+B,WAGpCxP,GACP,IAAIuQ,GACD,YAAI7Q,MAAMuG,EAAM9H,EAAElB,QAAQwS,QAAQC,OAAM,SAAA5F,GAAE,OAClB,IAAtB7D,EAAMxH,QAAQqL,IAAsC,IAAtB7D,EAAMxH,QAAQqL,IAAe7D,EAAM3I,YAAYwM,KAAQ9J,KAG1FwP,EAAMtS,KACJ,cAACyS,EAAA,EAAD,CAAcC,MAAI,EAACC,MAAO,CAACvD,MAAM,GAAD,OAAK,EAAElK,EAAI,IAAX,KAAmB0N,UAAW,UAA9D,SACE,cAACC,EAAA,EAAD,CACEC,KAAM,QACN1H,QAAS,WACL,IAAK,IAAIwB,EAAK,EAAGA,EAAK7D,EAAM9H,EAAElB,OAAQ6M,IACV,IAAtB7D,EAAMxH,QAAQqL,KAChB7D,EAAM3I,YAAYwM,GAAM9J,GAG5BoJ,KARN,SAaGmH,EAAS,cAACC,EAAA,EAAD,IAAyB,cAACC,EAAA,EAAD,OAd5BzQ,KAPNA,EAAE,EAAGA,EAAEoC,EAAGpC,IAAM,EAAhBA,GA2BT,OACA,cAACmQ,EAAA,EAAD,UACE,cAACR,EAAA,EAAD,CAAMU,WAAS,EAACK,OAAQ,CAACpE,MAAO,OAAhC,SACGkD,MAMP,SAASmB,GAAT,GAGE,IAH8C,IAAvBvO,EAAsB,EAAtBA,EAAG6D,EAAmB,EAAnBA,MAAOmD,EAAY,EAAZA,UAC3BwH,EAAW,GAD4B,WAGpC5Q,GACP4Q,EAAS1T,KACP,cAACyS,EAAA,EAAD,CAAcC,MAAI,EAACC,MAAO,CAACvD,MAAM,GAAD,OAAK,EAAElK,EAAI,IAAX,KAAmB0N,UAAW,UAA9D,SACE,cAACe,EAAA,EAAD,CACEb,KAAM,QACNO,QAAStK,EAAMxG,eAAeO,GAC9BsI,QAAS,SAACnK,GACR2S,QAAQC,IAAI5S,EAAEqJ,OAAO+I,SACrBtK,EAAMxG,eAAeO,GAAK7B,EAAEqJ,OAAO+I,QACnCnH,QAPKpJ,KAFNA,EAAE,EAAGA,EAAEoC,EAAGpC,IAAM,EAAhBA,GAiBT,OACE,cAACmQ,EAAA,EAAD,UACE,cAACR,EAAA,EAAD,CAAMU,WAAS,EAACK,OAAQ,CAACpE,MAAO,QAAS0E,WAAY,SAArD,SACGJ,MAMT,SAASK,GAAT,GAA2D,IAAzChL,EAAwC,EAAxCA,MAA8BiL,GAAU,EAAjCrT,WAAiC,EAArBuL,UAAqB,EAAV8H,SAC9CjL,EAAMxF,aAgDN,IA/CA,IAAM0Q,EAAc,EAAiClL,EAAM1G,WAAaqP,EAElEwC,EAAQ,SAAC,GAAgC,IAA/BnL,EAA8B,EAA9BA,MAAOzE,EAAuB,EAAvBA,SAAU7C,EAAa,EAAbA,QAAa,EACdgI,oBAAS,GADK,mBACrCmC,EADqC,KAC5BuI,EAD4B,KAEtCC,EAAOrL,EAAM3H,OAAOkD,GAAU7C,GAFQ,EAGVgI,mBAAShI,IAAUsH,EAAMtH,SAHf,6BAK5C,OACE,cAACgR,EAAA,EAAD,CAAMC,MAAI,EAEJ2B,UAAWL,EAAQM,YACnB3B,MAAO,CACLX,WAAY3J,GAAU/D,GACtB8K,MAAM,GAAD,OApMA,EAoMA,MACLC,OAAO,GAAD,OApMA,EAoMA,MACNkF,QAAQ,GAAD,OApMA,EAoMA,MACPC,OAAO,GAAD,OApMA,GAoMA,MACNC,OAAO,OAAD,OAAS7I,EAAQ,QAAQ,OAAzB,YAnNH,4BAoNHuF,QAAQ,GAAD,OAAKiD,EAAK,EAAExI,EAAQ,GAAI,KAEjCP,cAAe,WAAK8I,GAAW,IAC/B7I,aAAc,WAAK6I,GAAW,IAC9B/I,QAAS,WAAKrC,EAAM3H,OAAOkD,GAAU7C,IAAU2S,IAb1C3S,IAmBTiT,EAAM,SAAC,GAEX,IAFkC,IAAtB3L,EAAqB,EAArBA,MAAOzE,EAAc,EAAdA,SACbqQ,EAAS,GACNlT,EAAQ,EAAGA,EAAQsH,EAAM1G,WAAYZ,IAAW,CAEvDkT,EAAO3U,KACL,cAACkU,EAAD,CAAqBnL,MAAOA,EAAOqL,MAF1B,EAEsC9P,SAAUA,EAAU7C,QAASA,GAAhEA,IAIhB,OACE,cAACgR,EAAA,EAAD,CAAMU,WAAS,EAACT,MAAI,EAACkC,QAAS,EAA9B,SAEKD,KAMHE,EAAO,GACJvQ,EAAS,EAAGA,EAASyE,EAAM5G,YAAamC,IAC/CuQ,EAAK7U,KAAK,cAAC0U,EAAD,CAAoBpQ,SAAUA,EAAUyE,MAAOA,GAArCzE,IAGtB,MAAQ,CACN,cAACmO,EAAA,EAAD,CAAsBU,WAAS,EAACT,MAAI,EAACkC,QAAS,EAAGjC,MAAO,CAAC4B,QAAQ,GAAD,OAAI7C,GAAJ,MAAuBtC,MAAM,GAAD,OAAK6E,EAAL,OAA5F,SACGY,GADQ,YA6gBAC,OApgBf,YAA4C,IAA9B/L,EAA6B,EAA7BA,MAAgBpI,GAAa,EAAtBoU,QAAsB,EAAbpU,YAAa,EAEnB0P,sBAAW,SAAA7M,GAAC,OAAIA,EAAE,IAAG,GAAlC0I,EAFgC,oBAGzCvL,EAAWuL,UAAYA,EACvB2D,OAAO3D,UAAYA,EAEnB,IAAM8H,EAAUpC,KA0ChB,MACE,CACA,qBAAqByC,UAAWL,EAAQjC,QACnC1G,cAAe,SAACpK,GAAKN,EAAWqU,YAAW,GAC3C1J,aAAc,SAACrK,GAAKN,EAAWqU,YAAW,GAF/C,SAIE,eAACC,EAAA,EAAD,WACE,eAAChC,EAAA,EAAD,CAAUiC,QAAM,EAACvJ,UAAU,EACjBP,QAhDH,SAACnK,GACZ,IAAIkU,EAAQC,SAASC,cAAc,SACnCD,SAASE,KAAKC,YAAYJ,GAC1BA,EAAMtE,KAAO,OACbsE,EAAMtV,GAAK,YACXsV,EAAMxC,MAAQ,eAEdyC,SAASI,eAAe,aAAaC,QACrCL,SAASI,eAAe,aAAaE,SAAW,WAE9C,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAACC,GACf,IAAIC,EAAkBD,EAAMxL,OAAO0L,OACnCnG,OAAOkG,gBAAkBA,EACzB,IAAIpT,EAAOsT,KAAKC,MAAMH,GACtBlG,OAAOlN,KAAMA,EACboG,EAAMoN,SAASxT,GACfoG,EAAMjH,UAAS,EACfiH,EAAMhH,SAAQ,EACdgH,EAAMgD,cACNG,KAEFyJ,EAAOS,WAAWhB,SAASI,eAAe,aAAaa,MAAM,IAC7DjB,SAASE,KAAKgB,YAAYnB,KAwBxB,UAEE,cAACoB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,cAACtD,EAAA,EAAD,sBAMF,eAACD,EAAA,EAAD,CAAUiC,QAAM,EACN9J,QAhCH,SAACnK,GACZ,IAAI0B,EAAOoG,EAAM0N,WACbC,EAAOT,KAAKU,UAAUhU,GAEtBiU,EAAWxB,SAASC,cAAc,KACtCD,SAASE,KAAKC,YAAYqB,GAC1BA,EAASA,SAAW,gBACpBA,EAASjE,MAAMkE,QAAU,OACzBD,EAASE,KAAO,iCAAmCC,mBAAmBL,GACtEE,EAASnB,QACTL,SAASE,KAAKgB,YAAYM,IAqBtB,UAEE,cAACL,EAAA,EAAD,UACE,cAACS,EAAA,EAAD,MAEF,cAAC9D,EAAA,EAAD,0BAKF,cAAC+D,EAAA,EAAD,IAEA,eAAChE,EAAA,EAAD,CAAUiC,QAAM,EAACvJ,SAAU5C,EAAMlH,QACvBuJ,QAAS,SAACnK,GACR8H,EAAMlH,SAAWkH,EAAMlH,QACvBkH,EAAMvI,MAAMuB,SAAWgH,EAAMlH,QAC7BkH,EAAMjH,UAAW,EACjBiH,EAAMhH,SAAWgH,EAAMlH,QACvBqK,IACInD,EAAMlH,SACRkH,EAAMxB,SAERwB,EAAMgD,eAVlB,UAYE,cAACwK,EAAA,EAAD,UACE,cAACW,GAAA,EAAD,MAEF,cAAChE,EAAA,EAAD,4BAMF,eAACD,EAAA,EAAD,WACE,cAACkE,EAAA,EAAD,CAAYxE,MAAO,CAACvD,MAAO,OAA3B,yBAGA,cAACgI,EAAA,EAAD,CACEzE,MAAO,CAACvD,MAAO,OACfiI,UACCtO,EAAMxH,QAAQ0E,SAAS,KACpB,YAAIzD,MAAMuG,EAAM9H,EAAElB,QAAQwS,QAAQC,OAAM,SAAA5F,GAAE,OACpB,IAApB7D,EAAMxH,QAAQqL,IAAW7D,EAAM1I,WAAWuM,IAA8B,IAArB7D,EAAMxH,QAAQqL,MAGvE0K,aAAcvO,EAAMvI,MAAM2C,kBAC1BoU,kBAAiB,yBACjB7I,KAAM3F,EAAMvI,MAAMoH,oBAClBzD,IAAK,EACLsK,IAAK1F,EAAMvI,MAAM2C,kBACjBqU,kBAAmB,OACnBC,SAAU,SAACxW,EAAGyW,GACZ,IAAK,IAAI5U,EAAE,EAAGA,EAAEiG,EAAM9H,EAAElB,OAAQ+C,IACL,IAArBiG,EAAMxH,QAAQuB,KAChBiG,EAAM5I,eAAe2C,GAAK4U,IAIhCpM,aAAc,WAAKvC,EAAMgD,oBAI7B,eAACkH,EAAA,EAAD,WACE,cAACkE,EAAA,EAAD,CAAYxE,MAAO,CAACvD,MAAO,OAA3B,oBAGE,cAACgI,EAAA,EAAD,CACEzE,MAAO,CAACvD,MAAO,OACfiI,UACEtO,EAAMxH,QAAQ0E,SAAS,KACpB,YAAIzD,MAAMuG,EAAM9H,EAAElB,QAAQwS,QAAQC,OAAM,SAAA5F,GAAE,OACpB,IAApB7D,EAAMxH,QAAQqL,KAAY7D,EAAM1I,WAAWuM,IAA8B,IAArB7D,EAAMxH,QAAQqL,MAGzE0K,aAAcvO,EAAMvI,MAAM2C,kBAC1BoU,kBAAiB,yBACjB7I,KAAM3F,EAAMvI,MAAMoH,oBAClBzD,IAAK,EACLsK,IAAK1F,EAAMvI,MAAM2C,kBACjBqU,kBAAmB,OAEnBC,SACE,SAACxW,EAAGyW,GACF,IAAK,IAAI5U,EAAE,EAAGA,EAAEiG,EAAM9H,EAAElB,OAAQ+C,IACL,IAArBiG,EAAMxH,QAAQuB,KAAoC,IAAxBiG,EAAM1I,WAAWyC,KAC7CiG,EAAM5I,eAAe2C,GAAK4U,GAG9B3O,EAAMgD,oBAQhB,eAACkH,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcP,MAAO,CAACvD,MAAO,OAA7B,wBAGA,eAACqD,EAAA,EAAD,CAAMU,WAAS,EAACR,MAAO,CAACvD,MAAO,OAASwF,QAAS,EAAGd,WAAY,SAAhE,UACA,cAACrB,EAAA,EAAD,CAAMC,MAAI,EAAaC,MAAO,CAACvD,MAAO,MAAQwD,UAAW,UAAzD,SAEA,cAACC,EAAA,EAAD,CACEC,KAAM,QACN1H,QAAS,SAACnK,GACR,IAAK,IAAI6B,EAAE,EAAGA,EAAEiG,EAAM/H,EAAEjB,OAAQ+C,IACL,IAArBiG,EAAMzH,QAAQwB,KAAUiG,EAAM5H,QAAQ2B,IAAK,GAEjDoJ,IACAnD,EAAMgD,eAPV,SASI,cAAC4L,GAAA,EAAD,OAXY,OAed,cAAClF,EAAA,EAAD,CAAMC,MAAI,EAAeC,MAAO,CAACvD,MAAO,MAAQwD,UAAW,UAA3D,SACF,cAACC,EAAA,EAAD,CACEC,KAAM,QACN1H,QAAS,SAACnK,GACR,IAAK,IAAI6B,EAAE,EAAGA,EAAEiG,EAAM/H,EAAEjB,OAAQ+C,IACL,IAArBiG,EAAMzH,QAAQwB,KAAUiG,EAAM5H,QAAQ2B,IAAK,GAEjDoJ,IACAnD,EAAMgD,eAPV,SASI,cAAC6L,GAAA,EAAD,OAVc,eAiBpB,cAACvF,GAAD,CAAetJ,MAAOA,EAAOmD,UAAWA,IAGxC,cAAC+K,EAAA,EAAD,IAEA,eAAChE,EAAA,EAAD,CAAUiC,QAAM,EAACvJ,SAAUhL,EAAWkX,cAC5BzM,QAAS,SAACnK,GACRN,EAAWkX,eAAiBlX,EAAWkX,cACvC3L,KAHZ,UAKE,cAACqK,EAAA,EAAD,UACE,cAACW,GAAA,EAAD,MAEF,cAAChE,EAAA,EAAD,kCAKF,cAACE,GAAD,CAAgBlO,EAAG6D,EAAM5G,YAAa4G,MAAOA,EAAOmD,UAAWA,IAE/D,cAACuH,GAAD,CAAgBvO,EAAG6D,EAAM5G,YAAa4G,MAAOA,EAAOmD,UAAWA,IAE/D,cAAC+K,EAAA,EAAD,IAEA,eAAChE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,sBAGA,cAACS,EAAA,EAAD,CACE7Q,EAAG,EACHuQ,QAAStK,EAAMhH,QACf0V,SAAU,SAACxW,GACT8H,EAAMhH,SAAWgH,EAAMhH,QACvBmK,UAMN,eAAC+G,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,uBAGA,cAACS,EAAA,EAAD,CACE7Q,EAAG,EACHuQ,QAAStK,EAAMjH,SACf2V,SAAU,SAACxW,GACT8H,EAAMjH,UAAYiH,EAAMjH,SACxBoK,UAMN,eAAC+G,EAAA,EAAD,WACE,cAACkE,EAAA,EAAD,CAAYxE,MAAO,CAACvD,MAAO,OAA3B,sBAGA,cAACgI,EAAA,EAAD,CACEzE,MAAO,CAACvD,MAAO,OACfkI,aAAcvO,EAAMvI,MAAMkF,eAC1B6R,kBAAiB,yBACjB7I,KAAM,GACNvK,IAAK,EACLsK,IAAK,EACL+I,kBAAmB,YAKvB,cAACP,EAAA,EAAD,IAEA,eAAChE,EAAA,EAAD,CAAUiC,QAAM,EACN9J,QAAS,SAACnK,GACR8H,EAAMrI,SAASqJ,QAAQO,OAASvB,EAAMrC,WACtCqC,EAAMgD,eAHlB,UAKE,cAACwK,EAAA,EAAD,UACE,cAACuB,GAAA,EAAD,MAEF,cAAC5E,EAAA,EAAD,gCAMF,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,2BAGA,cAACS,EAAA,EAAD,CACE7Q,EAAG,EACHuQ,QAAS1S,EAAWoN,YACpB0J,SAAU,SAACxW,GACTN,EAAWoN,aAAepN,EAAWoN,YACrC7B,cApPA,WA6PV,qBAAwBmI,UAAWL,EAAQ9B,WACtCS,MAAO5J,EAAMlH,QAAU,CAACgV,QAAS,SAAW,CAACA,QAAS,QACtDxL,cAAe,SAACpK,GAAKN,EAAWqU,YAAW,GAC3C1J,aAAc,SAACrK,GAAKN,EAAWqU,YAAW,GAH/C,SAKI,eAACC,EAAA,EAAD,WACE,eAAChC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,wBAGA,cAACS,EAAA,EAAD,CAEEN,QAAS1S,EAAWqL,YACpByL,SAAU,SAACxW,EAAEyW,GACX/W,EAAWqL,YAAc0L,EACrBA,IACF/W,EAAWkL,eAAgB,EAC3BlL,EAAW6E,aAAc,GAE3B0G,MARG,gBAaT,eAAC+G,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,yBAGA,cAACS,EAAA,EAAD,CAEEN,QAAS1S,EAAW6E,YACpBiS,SAAU,SAACxW,EAAEyW,GACX/W,EAAW6E,YAAckS,EACrBA,IACF/W,EAAWkL,eAAgB,EAC3BlL,EAAWqL,aAAc,GAE3BjD,EAAMjH,UAAW,EACjBiH,EAAMjI,iBACNoL,MAVG,gBAeT,eAAC+G,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,2BAGA,cAACS,EAAA,EAAD,CAEEN,QAAS1S,EAAWkL,cACpB4L,SAAU,SAACxW,EAAEyW,GACX/W,EAAWkL,cAAgB6L,EACvBA,IACF/W,EAAWqL,aAAc,EACzBrL,EAAW6E,aAAc,GAE3B0G,MARG,mBAaT,eAAC+G,EAAA,EAAD,CAAUiC,QAAM,EACN9J,QAAS,SAACnK,GAER,IADA,IAAM6E,EAAU,GACPhD,EAAE,EAAGA,EAAEiG,EAAM/H,EAAEjB,OAAQ+C,IACL,IAArBiG,EAAMzH,QAAQwB,IAAUgD,EAAQ9F,KAAK8C,GAE3CiG,EAAMgP,SAASjS,GACfiD,EAAMxF,aACNwF,EAAMgD,cACNG,KATZ,UAWE,cAACqK,EAAA,EAAD,UACE,cAACyB,GAAA,EAAD,MAEF,cAAC9E,EAAA,EAAD,gCAKF,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,iBAGA,cAACkE,EAAA,EAAD,CACEE,aAAc,EACdW,mBAAkB,oBAClBvJ,KAAM,IACNvK,KAAMpB,KAAKsO,GAAK,EAChB5C,IAAK1L,KAAKsO,GAAK,EACfmG,kBAAmB,OACnBC,SAAU,SAACxW,EAAGyW,GACZ3O,EAAMmP,OAAOR,EAAK3O,EAAM9G,MAAMwB,EAAGsF,EAAM9G,MAAMyB,GAC7CqF,EAAMxB,eAMZ,eAAC0L,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,iBAGA,cAACkE,EAAA,EAAD,CACEE,aAAc,EACdW,mBAAkB,oBAClBvJ,KAAM,IACNvK,KAAMpB,KAAKsO,GAAK,EAChB5C,IAAK1L,KAAKsO,GAAK,EACfmG,kBAAmB,OACnBC,SAAU,SAACxW,EAAGyW,GACZ3O,EAAMmP,OAAOnP,EAAM9G,MAAMuB,EAAGkU,EAAK3O,EAAM9G,MAAMyB,GAC7CqF,EAAMxB,eAKZ,eAAC0L,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,iBAGA,cAACkE,EAAA,EAAD,CACEE,aAAc,EACdW,mBAAkB,oBAClBvJ,KAAM,IACNvK,KAAMpB,KAAKsO,GAAK,EAChB5C,IAAK1L,KAAKsO,GAAK,EACfmG,kBAAmB,OACnBC,SAAU,SAACxW,EAAGyW,GACZ3O,EAAMmP,OAAOnP,EAAM9G,MAAMuB,EAAGuF,EAAM9G,MAAMwB,EAAGiU,GAC3C3O,EAAMxB,mBAnIR,cA4IV,qBAAuB8M,UAAWL,EAAQ7B,UACrCQ,OAAOhS,EAAWkX,cAAgB,CAAChB,QAAS,UAC5CxL,cAAe,SAACpK,GAAKN,EAAWqU,YAAW,GAC3C1J,aAAc,SAACrK,GAAKN,EAAWqU,YAAW,GAH/C,SAKE,cAACjB,GAAD,CAAShL,MAAOA,EAAOpI,WAAYA,EAAYqT,QAASA,EAAS9H,UAAWA,KALpE,aASV,sBAA8BmI,UAAWL,EAAQ5B,iBAC5CO,MAAOhS,EAAWkX,cAAgB,CAAChB,QAAS,SAAW,CAACA,QAAS,QACjExL,cAAe,SAACpK,GAAKN,EAAWqU,YAAW,GAC3C1J,aAAc,SAACrK,GAAKN,EAAWqU,YAAW,GAH/C,UAME,eAACvC,EAAA,EAAD,CAA0BU,WAAS,EAACT,MAAI,EAACkC,QAAS,EAAGd,WAAY,SAAUnB,MAAO,CAChF4B,QAAQ,GAAD,OAAI7C,GAAJ,MAAuByG,WAAW,IAAKC,cAAc,IAAKhJ,MAAM,GAAD,OAAKiJ,KAAL,OADxE,UAGE,cAAC5F,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAC6B,OAAO,GAAD,OAAK7C,GAAL,MAAuBvC,MAAO,OAAQkJ,SAAS,SAAxE,sBAGA,cAAC7F,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAC6B,OAAO,GAAD,OAAI7C,GAAJ,MAAuBvC,MAAM,GAAD,OA/rBzC,GA+rByC,OAArD,SAEE,cAACgI,EAAA,EAAD,CAEEE,aAAcvO,EAAMvI,MAAM4B,mBAC1BmV,kBAAiB,yBACjB7I,KAAM,EACNvK,IAAK,EACLsK,IAAK,EACL+I,kBAAmB,OACnBC,SAAU,SAACxW,EAAGyW,GACZ3O,EAAM5G,YAAcuV,EACpB3O,EAAMxF,aACN2I,MAVG,mBATA,eAyBX,eAACuG,EAAA,EAAD,CAAyBU,WAAS,EAACT,MAAI,EAACkC,QAAS,EAAGd,WAAY,SAAUnB,MAAO,CAC/E4B,QAAQ,GAAD,OAAI7C,GAAJ,MAAuByG,WAAW,IAAKC,cAAc,IAAKhJ,MAAM,GAAD,OAAKiJ,KAAL,OADxE,UAGE,cAAC5F,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAC6B,OAAO,GAAD,OAAK7C,GAAL,MAAwBvC,MAAO,OAAQkJ,SAAS,SAAzE,qBAGA,cAAC7F,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAC6B,OAAO,GAAD,OAAI7C,GAAJ,MAAuBvC,MAAM,GAAD,OAxtBzC,GAwtByC,OAArD,SAEE,cAACgI,EAAA,EAAD,CAEEE,aAAcvO,EAAMvI,MAAM8B,kBAC1BiV,kBAAiB,yBACjB7I,KAAM,EACNvK,IAAK,EACLsK,IAAK,GACL+I,kBAAmB,OACnBC,SAAU,SAACxW,EAAGyW,GACZ3O,EAAM1G,WAAaqV,EACnB3O,EAAMxF,aACN2I,MAVG,kBATA,gBA/BH,sBC5oBCqM,OA7Df,WACE,IAAIxP,EAAQ,IAAIvI,EAChBqP,OAAO9G,MAAQA,EACf,IAAMpI,EAAa,CACjBuL,UAAW,KACX8I,YAAY,EACZwD,UAAU,EACVxM,aAAa,EACbxG,aAAa,EACbqG,eAAe,EACfkC,aAAa,EACb8J,eAAe,EACfxV,WAAY,GACZF,YAAa,GAuCf,OArCA4G,EAAMpI,WAAaA,EACnBkP,OAAOlP,WAAaA,EAGpBkP,OAAOrF,iBAAiB,eAAe,SAACvJ,GACtCN,EAAW6X,UAAW,KACrB,GAEH3I,OAAOrF,iBAAiB,eAAe,SAACvJ,GACtCN,EAAW6X,UAAW,KACrB,GAEH3I,OAAOrF,iBAAiB,aAAa,SAACvJ,GAChCN,EAAW6X,WACR7X,EAAWqU,YACVjM,EAAMzH,QAAQkR,OAAM,SAAAiG,GAAC,OAAU,IAANA,MAAY1P,EAAMxH,QAAQiR,OAAM,SAAAiG,GAAC,OAAU,IAANA,MAAY1P,EAAMvH,QAAQgR,OAAM,SAAAiG,GAAC,OAAU,IAANA,OACrG1P,EAAMzH,QAAQmB,KAAK,GACnBsG,EAAMxH,QAAQkB,KAAK,GACnBsG,EAAMvH,QAAQiB,KAAK,IAInB9B,EAAWuL,WAAWoC,YAAW,WACnC3N,EAAWuL,cACV,QAGJ,GAEH2D,OAAOrF,iBAAiB,WAAW,SAACvJ,GACjB,SAAXA,EAAEyX,OAAoBzX,EAAE0X,SAAW1X,EAAE2X,WACvC7P,EAAMxH,QAAQkB,KAAK,GACnBsG,EAAMzH,QAAQmB,KAAK,OAGvB,GAGA,CACE,cAAC,EAAD,CAAuBsG,MAAOA,EAAOpI,WAAYA,GAApC,UACb,cAAC,GAAD,CAAKd,GAAI,OAAmBkJ,MAAOA,EAAOpI,WAAYA,GAAjC,SCjDZkY,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAVQ,GAAOlE,SAASI,eAAe,QACnC+D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFH,IAOFT,O","file":"static/js/main.751e69c9.chunk.js","sourcesContent":["import * as thre from 'three';\nimport React, {useRef, useState, useMemo} from 'react'\n\nclass Vertex {\n  static all = [];\n\n  constructor(pos, fixed, pos0, vel, force) {\n    this.pos = pos;     // thre.Vector3\n    this.fixed = fixed;\n    this.pos0 = pos0;\n    this.vel = vel;\n    this.force =force;\n    this.vs =[];  // neighbor vertices\n    this.es = [];   // neighbor edges\n    this.fs = [];   // incident faces\n\n    this.id = Vertex.all.length;\n    Vertex.all.push(this);\n  }\n\n  facesOnTheOtherSide() {\n    // const fs = [];\n    // for (const f of Face.all) {\n    //   let onTheOtherSide = true;\n    //   for (const v of f.vs) {\n    //     if (!v.vs.includes(v)) {\n    //       onTheOtherSide = false;\n    //       break;\n    //     }\n    //   }\n    //   if (onTheOtherSide) fs.push(f);\n    // }\n    // return fs;\n  }\n}\n\nclass Edge {\n  static all = [];\n\n  constructor(vs, lMax, maxContraction, edgeChannel, edgeActive, l) {\n    this.vs = [];\n    this.lMax = lMax;\n    this.maxContraction = maxContraction;\n    this.edgeChannel = edgeChannel;\n    this.edgeActive = edgeActive;\n    this.l = l;\n\n    for (let iv of vs) {\n      this.vs.push(Vertex.all[iv]);\n    }\n    Vertex.all[vs[0]].vs.push(Vertex.all[vs[1]]);\n    Vertex.all[vs[1]].vs.push(Vertex.all[vs[0]]);\n    Vertex.all[vs[0]].es.push(this);\n    Vertex.all[vs[1]].es.push(this);\n\n    this.id = Edge.all.length;\n    Edge.all.push(this);\n  }\n\n}\n\n\n\n\nclass Model {\n  static k = 200000;\n  static h = 0.001;\n  static dampingRatio = 0.992;\n  static contractionInterval = 0.075;\n  static contractionSteps = 4;\n  static maxMaxContraction = Math.round(Model.contractionInterval * Model.contractionSteps * 100) /100;\n  static contractionPercentRate = 5e-4 ;  // contraction percentage change ratio, per time step\n  static gravityFactor = 9.8;\n  static gravity = 1;     // if gravity is on\n  static defaultMinLength = 1.2;\n  static defaultMaxLength = Model.defaultMinLength / (1 - Model.maxMaxContraction);\n  static frictionFactor = 0.8;\n  static numStepsAction = 2 / Model.h;\n  static defaultNumActions = 1;\n  static defaultNumChannels = 4;\n\n  constructor() {\n    this.viewer = null;\n\n    this.Vertex = Vertex;\n    this.Edge = Edge;\n    this.Model = Model;\n    this.controls = null;\n    this.sharedData = null;\n\n    this.reset();\n\n    this.loadData();\n    this.resetSelection();\n    this.recordV();\n  }\n\n  reset() {\n    // input data\n    this.v = [];  // vertex positions: nV x 3\n    this.e = [];  // edge positions: nE x 2\n    this.v0 = [];\n    this.fixedVs = [];  // id of vertices that are fixed\n    this.lMax = []; // maximum length\n    this.edgeActive = [];  // if beam is active: nE\n    this.edgeChannel = [];  // id of beam edgeChannel: nE\n    this.script = [];    // nTimeSteps x nChannels\n\n    // update at every step\n    this.maxContraction = [];  // percentage of maxMaxContraction: nE\n    this.vel = [];  // vertex velocities: nV x 3\n    this.f = [];  // vertex forces: nV x 3\n    this.l = [];    // current length of beams: nE\n\n    // interface\n    this.vStatus = [];    // 0: none, 1: hovered; 2: selected\n    this.eStatus = [];    // 0: none, 1: hovered; 2: selected\n    this.fStatus = [];    // 0: none, 1: hovered; 2: selected\n\n    // statistics\n    this.iAction = 0;\n    this.numSteps = 0;\n    this.timeStart = new Date();\n\n    // status\n    this.editing = false;\n    this.simulate = true;\n    this.gravity = true;\n    this.directional = false;\n    this.euler = new thre.Euler(0, 0, 0);\n\n    // channel status\n    this.numChannels = Model.defaultNumChannels;\n    this.numActions = Model.defaultNumActions;\n    this.inflateChannel = new Array(this.numChannels).fill(false);\n    this.contractionPercent = new Array(this.numChannels).fill(1);  // contraction percentage of each channel, 0-1\n\n  }\n\n  loadDict(data) {\n    // load a dictionary\n    let v = [];\n    let e = Array.from(data.e);\n    let f = Array.from(data.f);\n    let p = Array.from(data.p);\n    for (let i=0; i<data.v.length; i++) {\n      v.push(new thre.Vector3(data.v[i][0], data.v[i][1], data.v[i][2]));\n    }\n    this.reset();\n    if (data.lMax) {\n      let lMax = data.lMax;\n      let maxContraction = data.maxContraction;\n      let fixedVs = data.fixedVs;\n      let edgeChannel = data.edgeChannel;\n      let edgeActive = data.edgeActive;\n      this.loadData(v, e, f, p, lMax, maxContraction, fixedVs, edgeChannel, edgeActive);\n    }\n    else {\n      this.loadData(v, e, f, p);\n    }\n    this.resetSelection();\n    this.recordV();\n  }\n\n  loadData(v, e, f, p, lMax=null, maxContraction=null, fixedVs=null, edgeChannel=null, edgeActive=null, script=[]){\n    if (v && e) {\n      this.v = v;\n      this.e = e;\n    }\n    else{\n      this.v.push(new thre.Vector3(1, -1/Math.sqrt(3), 0.2));\n      this.v.push(new thre.Vector3(0, 2/Math.sqrt(3), 0.2));\n      this.v.push(new thre.Vector3(-1, -1/Math.sqrt(3), 0.2));\n      this.v.push(new thre.Vector3(0, 0, 4/Math.sqrt(6) + 0.2));\n\n      this.e.push([0, 1]);\n      this.e.push([1, 2]);\n      this.e.push([2, 0]);\n      this.e.push([0, 3]);\n      this.e.push([1, 3]);\n      this.e.push([2, 3]);\n    }\n    // rescale\n    let currentLm = this.v[0].distanceTo(this.v[1]) / (1 - Model.maxMaxContraction);\n    for (let i=0; i<this.v.length; i++) {\n      this.v[i].divideScalar(currentLm);\n      this.v[i].multiplyScalar(Model.defaultMaxLength);\n    }\n\n    this.recordV();\n\n    if (fixedVs) this.fixedVs = fixedVs;\n    if (lMax) this.lMax = lMax;\n    if (maxContraction) this.maxContraction = maxContraction;\n    if (edgeActive) this.edgeActive = edgeActive;\n    if (edgeChannel) this.edgeChannel = edgeChannel;\n    if (script) this.script = script;\n    this.resetSelection();\n\n    this.precompute();\n  }\n\n  saveData() {\n    let data = {};\n    data.v = [];\n    for (let v of this.v) {\n      data.v.push([v.x, v.y, v.z]);\n    }\n    data.e = this.e;\n    data.lMax = this.lMax;\n    data.maxContraction = this.maxContraction;\n    data.fixedVs =this.fixedVs;\n    data.edgeChannel = this.edgeChannel;\n    data.edgeActive = this.edgeActive;\n    return data;\n  }\n\n  resetSelection() {\n\n    this.vStatus = new Array(this.v.length).fill(0);\n    this.eStatus = new Array(this.e.length).fill(0);\n    this.fStatus = new Array(this.f.length).fill(0);\n  }\n\n  recordV() {\n    this.v0 = [];\n    let bbox = this.bbox();\n    let zOffset = -bbox[5];\n\n    for (let v of this.v) {\n      let vv = v.clone();\n      vv.z += zOffset;\n      this.v0.push(vv);\n    }\n  }\n\n  resetV() {\n    this.iAction = 0;\n    this.numSteps = 0;\n\n    for (let i=0; i<this.v.length; i++) {\n      this.v[i].copy(this.v0[i]);\n    }\n\n    this.numSteps = 0;\n  }\n\n  precompute() {\n    const copyArrays = (oldValue, newValue)=>{\n      for (let i=0; i<Math.min(oldValue.length, newValue.length); i++) {\n        newValue[i] = oldValue[i];\n      }\n      return newValue;\n    }\n\n    this.l = [];\n    for (let i=0; i<this.e.length; i++) {\n      let e = this.e[i];\n      this.l.push(this.v[e[0]].distanceTo(this.v[e[1]]));\n    }\n\n    if (this.vel.length !== this.v.length) {\n      this.vel = [];\n      for (let i=0; i<this.v.length; i++) {\n        this.vel.push(new thre.Vector3());\n      }\n    }\n    if (this.maxContraction.length !== this.e.length) {\n      const newValue = new Array(this.e.length).fill(Model.maxMaxContraction);\n      this.maxContraction = copyArrays(this.maxContraction, newValue);\n    }\n    if (this.fixedVs.length !== this.v.length) {\n      const newValue = new Array(this.v.length).fill(false);\n      this.fixedVs = copyArrays(this.fixedVs, newValue);\n    }\n    if (this.lMax.length !== this.e.length) {\n      const newValue = new Array(this.e.length).fill(Model.defaultMaxLength);\n      this.lMax = copyArrays(this.lMax, newValue);\n    }\n    if (this.edgeActive.length !== this.e.length) {\n      const newValue = new Array(this.e.length).fill(true);\n      this.edgeActive = copyArrays(this.edgeActive, newValue);\n    }\n    if (this.edgeChannel.length !== this.e.length) {\n      const newValue = new Array(this.e.length).fill(0);\n      this.edgeChannel = copyArrays(this.edgeChannel, newValue);\n    }\n    if ((this.script.length !== this.numChannels)\n      || (this.script.length && this.script[0].length !== this.numActions))\n    {\n      const newValue = Array(this.numChannels).fill(false).map(_=>Array(this.numActions).fill(false));\n      if (this.script.length === 0) this.script = newValue;\n\n      for (let iChannel=0; iChannel<Math.min(this.script.length, newValue.length); iChannel++) {\n        for (let iAction=0; iAction<Math.min(this.script[0].length, newValue[0].length); iAction++) {\n          newValue[iChannel][iAction] = this.script[iChannel][iAction];\n        }\n      }\n      this.script = newValue;\n    }\n\n  }\n\n  update() {\n    // initialize forces\n    this.f = [];\n    for (let i=0; i<this.v.length; i++) {\n      this.f.push(new thre.Vector3());\n    }\n\n    // length maxContraction\n    for (let i=0; i<this.e.length; i++) {\n      let e = this.e[i];\n      let v0 = this.v[e[0]];\n      let v1 = this.v[e[1]];\n\n      let vec = v1.clone().sub(v0); // from 0 to 1\n\n      let l0 = this.lMax[i];\n      if (this.edgeActive[i]) {\n        let iChannel = this.edgeChannel[i];\n        let lMax = l0;\n        let lMin = lMax * (1 - this.maxContraction[i]);\n        l0 = lMax - this.contractionPercent[iChannel] * (lMax - lMin);\n      }\n\n      let d = vec.length() - l0;\n      let f = (d) * Model.k;\n      f = vec.normalize().multiplyScalar(f);  // from 0 to 1\n      this.f[e[0]].add(f);\n      this.f[e[1]].add(f.negate());\n    }\n\n    // gravity\n    for (let i=0; i<this.v.length; i++) {\n      if (this.gravity) {\n        this.f[i].add(new thre.Vector3(0, 0, -Model.gravityFactor * Model.gravity));\n      }\n    }\n\n    // friction\n  }\n\n  runScript() {\n    if (this.script.length === 0) return 0;\n\n    if (this.numSteps > ((this.iAction + 1) % this.numActions) * Model.numStepsAction ) {\n      this.iAction = Math.floor(this.numSteps / Model.numStepsAction) % this.numActions;\n\n      for (let iChannel=0; iChannel<this.numChannels; iChannel++) {\n        this.inflateChannel[iChannel] = this.script[iChannel][this.iAction];\n      }\n    }\n  }\n\n  step(n=1, scripting = true) {\n\n    for (let iStep=0; iStep<n; iStep++) {\n      this.precompute();\n      if (!this.simulate) {return}\n\n      if (scripting) {\n        this.runScript();\n      }\n      this.update();\n\n      if (this.editing) {\n        // this.center();\n      }\n\n      // update contraction percentage\n      for (let i=0; i<this.inflateChannel.length; i++) {\n        if (this.inflateChannel[i]) {\n          this.contractionPercent[i] -= Model.contractionPercentRate;\n          if (this.contractionPercent[i] < 0) {\n            this.contractionPercent[i] = 0;\n          }\n        }\n        else {\n          this.contractionPercent[i] += Model.contractionPercentRate;\n          if (this.contractionPercent[i] > 1) {\n            this.contractionPercent[i] = 1;\n          }\n        }\n      }\n\n      for (let i=0; i<this.v.length; i++) {\n        if (this.fixedVs[i]) continue;\n\n        if (this.sharedData.movingJoint && this.vStatus[i] !== 2) continue;\n\n        this.vel[i].add(this.f[i].clone().multiplyScalar(Model.h));\n        if (this.v[i].z <= 0) {\n          // friction\n          if (this.directional) {\n            if (this.vel[i].x < 0) this.vel[i].x *= (1 - Model.frictionFactor);\n            if (this.vel[i].y < 0) this.vel[i].y *= (1 - Model.frictionFactor);\n          }\n          else {\n            this.vel[i].x *= (1 - Model.frictionFactor);\n            this.vel[i].y *= (1 - Model.frictionFactor);\n          }\n        }\n\n        this.vel[i].multiplyScalar(Model.dampingRatio);   // damping\n        while (this.vel[i].length() > 5) {\n          this.vel[i].multiplyScalar(0.9);\n        }\n\n        this.v[i].add(this.vel[i].clone().multiplyScalar(Model.h));\n\n      }\n\n      for (let i=0; i<this.v.length; i++) {\n        if (this.v[i].z < 0)\n        {\n          this.v[i].z = 0;\n          this.vel[i].z = -this.vel[i].z;\n        }\n      }\n\n      this.numSteps += 1;\n    }\n\n    return this.v;\n  }\n\n  // addPolytope(iFace) {\n  //   let face = this.faces[iFace];\n  //   let v0 = this.v[face[0]];\n  //   let v1 = this.v[face[1]];\n  //   let v2 = this.v[face[2]];\n  //   let centroid = v0.clone().add(v1).add(v2).divideScalar(3);\n  //   let vec01 = v1.clone().sub(v0);\n  //   let vec12 = v2.clone().sub(v1);\n  //   let height = Math.sqrt(3) / 2 * Model.defaultMinLength;\n  //   let v4 = centroid.add(vec01.cross(vec12).normalize().multiplyScalar(height));\n  //   this.v.push(v4);\n  //   this.f.push(new thre.Vector3());\n  //   this.vel.push(new thre.Vector3());\n  //\n  //   let iv4 = this.v.length - 1;\n  //\n  //   let e0 = [face[0], iv4];\n  //   let e1 = [face[1], iv4];\n  //   let e2 = [face[2], iv4];\n  //   this.e.push(e0, e1, e2);\n  //\n  //   let face0 = [face[2], face[1], face[0]];\n  //   let face1 = [face[0], face[1], iv4];\n  //   let face2 = [face[1], face[2], iv4];\n  //   let face3 = [face[2], face[0], iv4];\n  //   this.faces.push(face0, face1, face2, face3);\n  //\n  //   this.precompute();\n  //   this.recordV();\n  //\n  //   this.updateDataStructure();\n  // }\n\n  addJoint(iJoint) {\n    let v = new thre.Vector3();\n    v.copy(this.v[iJoint]);\n    let vec = new thre.Vector3(Model.defaultMinLength, 0, 0);\n    v = v.add(vec);\n    this.v.push(v);\n\n    let e = [iJoint, this.v.length - 1];\n    this.e.push(e);\n  }\n\n  addEdges(iJoints) {\n    for (let i=0; i<iJoints.length; i++) {\n      for (let j=i+1; j<iJoints.length; j++) {\n        let notExist = true;\n        for (let e of this.e) {\n          if (e.includes(iJoints[i]) && e.includes(iJoints[j])) {\n            notExist = false;\n            break;\n          }\n        }\n        if (notExist) this.e.push([iJoints[i], iJoints[j]]);\n      }\n    }\n  }\n\n  removeJoint(iJoint) {\n    if ([0,1,2,3].includes(iJoint)) return;\n\n    this.updateDataStructure();\n\n    const ies = [];   // ids of edges to remove\n\n    const v = Vertex.all[iJoint];\n    for (let ee of v.es) {\n      ies.push(ee);\n    }\n\n    Vertex.all = Vertex.all.filter(vv=>vv !== v);\n    Edge.all = Edge.all.filter(ee=>!ies.includes(ee));\n\n    this.updateFromDataStructure();\n  }\n\n  removeEdge(iEdge) {\n\n  }\n\n  // update the model variables to data structures\n  updateDataStructure() {\n    Vertex.all = [];\n    for (let i = 0; i < this.v.length; i++) {\n      new Vertex(this.v[i], this.fixedVs[i], this.v0[i], this.vel[i], this.f[i]);\n    }\n    Edge.all = [];\n    for (let i = 0; i < this.e.length; i++) {\n      new Edge(this.e[i], this.lMax[i], this.maxContraction[i], this.edgeChannel[i], this.edgeActive[i], this.l[i]);\n    }\n  }\n\n  // convert data structures to model variables\n  updateFromDataStructure() {\n    this.v = [];\n    this.fixedVs = [];\n    this.v0 = [];\n    this.vel = [];\n    this.f = [];\n    for (let v of Vertex.all) {\n      this.v.push(v.pos);\n      this.fixedVs.push(v.fixed);\n      this.v0.push(v.pos0);\n      this.vel.push(v.vel);\n      this.f.push(v.f);\n    }\n\n    this.e = [];\n    this.lMax = [];\n    this.maxContraction = [];\n    this.edgeChannel = [];\n    this.edgeActive = [];\n    this.l = [];\n    for (let e of Edge.all) {\n      let vs = [e.vs[0].id, e.vs[1].id];\n      this.e.push(vs);\n      this.lMax.push(e.lMax);\n      this.maxContraction.push(e.maxContraction);\n      this.edgeChannel.push(e.edgeChannel);\n      this.edgeActive.push(e.edgeActive);\n      this.l.push(e.l);\n    }\n\n    this.vStatus = new Array(this.v.length).fill(0);\n    this.eStatus = new Array(this.e.length).fill(0);\n  }\n\n  static reindexObjects = (cls) => {\n    let i = 0;\n    for (let o of cls.all) {\n      o.id = i;\n      i += 1;\n    }\n  };\n\n  centroid(v0=false) {\n    let center = new thre.Vector3(0, 0, 0);\n    const vs = v0 ? this.v0 : this.v;\n    for (let v of vs) {\n      center.add(v);\n    }\n    center.divideScalar(this.v.length);\n    return center;\n  }\n\n  center() {\n    const cent0 = this.centroid(true);\n    const cent = this.centroid(false);\n    for (let i=0; i<this.v.length; i++) {\n      this.v[i].sub(cent);\n      this.v[i].add(cent0);\n    }\n  }\n\n  stepsPerSecond() {\n    let t = new Date();\n    return this.numSteps / ((t.getTime() - this.timeStart.getTime()) / 1000);\n  }\n\n  bbox() {\n    let xMax, yMax, zMax, xMin, yMin, zMin;\n    xMax = yMax = zMax = -Infinity;\n    xMin = yMin = zMin = Infinity;\n    for (let v of this.v) {\n      if (v.x > xMax) xMax = v.x;\n      if (v.y > yMax) yMax = v.y;\n      if (v.z > zMax) zMax = v.z;\n      if (v.x < xMin) xMin = v.x;\n      if (v.y < yMin) yMin = v.y;\n      if (v.z < zMin) zMin = v.z;\n    }\n    return [xMax, yMax, zMax, xMin, yMin, zMin];\n  }\n\n  infoJoints() {\n    return 'joints: '+ this.v.length;\n  }\n\n  infoBeams() {\n    return 'actuators: ' + this.e.length;\n  }\n\n  fixJoints(ids) {\n    for (let i=0; i<ids.length; i++) {\n      let id = ids[i];\n      alert('not implemented');\n      // if (viewer.typeSelected[i] === \"joint\") {\n      //   this.fixedVs[id] = true;\n      // }\n    }\n  }\n\n  unfixAll() {\n    this.fixedVs = [];\n    this.fixedVs = new Array(this.v.length).fill(false);\n  }\n\n  rotate(x, y, z) {\n    this.resetV();\n\n    let center = this.centroid();\n    let eulerInverse = new thre.Euler();\n    eulerInverse.setFromVector3(this.euler.toVector3().negate(), 'ZYX');\n    this.euler =new thre.Euler(x, y, z);\n\n    for (let i=0; i<this.v.length; i++) {\n      this.v[i].sub(center);\n      this.v[i].applyEuler(eulerInverse);\n      this.v[i].applyEuler(this.euler);\n      this.v[i].add(center);\n    }\n\n    this.recordV();\n  }\n\n}\n\nexport {Model};\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './style.css';\nimport React, {useRef, useState, useMemo, useEffect, useReducer} from 'react'\nimport * as THREE from 'three'\nimport { extend, Canvas, useFrame, useThree, useResource, useUpdate } from 'react-three-fiber'\n\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport {TransformControls, Stats} from \"drei\";\n// import { EffectComposer, Outline } from 'react-postprocessing'\nextend({OrbitControls})\n\nconst cWhite = new THREE.Color(0.6, 0.6, 0.6);\nconst cChannels = [\n  new THREE.Color(0.3, 0.3, 0.6),\n  new THREE.Color(0.6, 0.6, 0.3),\n  new THREE.Color(0.3, 0.6, 0.3),\n  new THREE.Color(0.3, 0.6, 0.6),\n  new THREE.Color(0.6, 0.3, 0.6),\n];\nconst cPureWhite = new THREE.Color(1, 1, 1);\nconst cBlack = new THREE.Color(0.05, 0.05, 0.05);\nconst cSelected = new THREE.Color(0.3, 0.1, 0.1);\nconst cHovered = new THREE.Color(0.5, 0.2, 0.2);\nconst cFixed = new THREE.Color(0.2, 0.8, 0.8);\nconst cPassive = new THREE.Color(0.15, 0.15, 0.15);\nconst dIn = 0.04;     // diameter of the inner piston\nconst dOut = 0.05;    // diameter of the outer piston\nconst dConstraint = 0.05;    // diameter of the constraint\nconst lConstraint = 0.02;    // length of the constraint\nconst lPiston = 0.527;       // length of each half piston\nconst lTube = 0.330;         // length of tube of each joint\nconst dTube = 0.02;  // diameter of joint tubes\nconst dJoint = 0.04;    // diameter of the joint ball\nconst fps = 30;\nwindow.fps = fps;\n\nfunction Ball({v, d, c, model, handleClick, handlePointerOver, handlePointerOut, setOControls, translating}) {\n\n  const mesh=useRef();\n  const material = useRef();\n  const transControls = useRef();\n  const [dragging, setDragging] = useState(false);\n  const prevPos = new THREE.Vector3();\n\n  useFrame((state)=>{\n    mesh.current.position.copy(v);\n    material.current.color.copy(c);\n\n    if (translating) {\n      const controls = transControls.current;\n      if (dragging)  {\n        v.copy(controls.worldPosition.clone().add(controls.position));\n        mesh.current.position.copy(v);\n      }\n      else {\n        transControls.current.position.copy(v);\n      }\n    }\n  });\n\n  useEffect(()=>{\n    const callbackDraggingChanged = (e) => {\n      setOControls(!e.value);\n      setDragging(e.value);\n\n      const controls = e.target;\n      if (e.value ===false) {\n        controls.object.position.multiplyScalar(0);\n        model.simulate=true;\n      }\n      else {\n        model.simulate=false;\n        prevPos.copy(controls.worldPosition);\n      }\n    }\n\n    const controls = transControls.current;\n    controls.position.copy(v);\n    if (controls) {\n      controls.addEventListener('dragging-changed', callbackDraggingChanged);\n      return () => {\n        controls.removeEventListener('dragging-changed', callbackDraggingChanged);\n      }\n    }\n  })\n\n  return(\n    <TransformControls\n      ref={transControls}\n      enabled={translating}\n      showX={translating}\n      showY={translating}\n      showZ={translating}\n      mode={\"translate\"}\n      space={\"local\"}\n    >\n      <mesh\n        ref={mesh}\n        position={v}\n        castShadow={true}\n        scale={[d, d, d]}\n        onClick={handleClick}\n        onPointerOver={handlePointerOver}\n        onPointerOut={handlePointerOut}\n      >\n        <sphereBufferGeometry args={[1, 20, 20]}/>\n        <meshStandardMaterial\n          ref={material}\n          color={c}\n        />\n      </mesh>\n    </TransformControls>\n  )\n}\n\nfunction Joint({v, iv, model, setOControls, sharedData}) {\n  const selected = (model.vStatus[iv] === 2);\n  const hovered = (model.vStatus[iv] === 1);\n  const fixed = false;\n  const [translating, setTranslating] = useState(false);\n  const color = new THREE.Color();\n\n  useFrame((sate)=>{\n    const selected = (model.vStatus[iv] === 2);\n    const hovered = (model.vStatus[iv] === 1);\n    const fixed = model.fixedVs[iv];\n    color.copy(selected?cSelected:hovered?cHovered:fixed?cFixed:cWhite);\n    if (sharedData.movingJoint && model.vStatus[iv] === 2 && !translating) {\n      setTranslating(true);\n    }\n    if ((!sharedData.movingJoint || model.vStatus[iv] !== 2) && translating) {\n      setTranslating(false);\n    }\n  });\n\n  const handleClick = (e)=>{\n    if (sharedData.removingJoint) {\n      model.removeJoint(iv);\n      model.precompute();\n      model.recordV();\n      model.forceUpdate();\n    }\n    else if(sharedData.addingJoint){\n      model.addJoint(iv);\n      model.precompute();\n      model.recordV();\n      model.forceUpdate();\n    }\n    else if (sharedData.movingJoint) {\n      model.vStatus.fill(0);\n      model.vStatus[iv] = 2;\n    }\n    else {\n      model.vStatus[iv] = 2;\n    }\n    sharedData.updateGUI();\n    e.stopPropagation();\n  }\n\n  const handlePointerOver = (e)=>{\n    if (model.vStatus[iv] !== 2) model.vStatus[iv] = 1;\n    e.stopPropagation();\n  }\n  const handlePointerOut = (e)=>{\n    if (model.vStatus[iv] !== 2) model.vStatus[iv] = 0;\n    e.stopPropagation();\n  }\n\n  return(\n    <Ball key={\"ball\"} v={v} d={dJoint}\n          model={model}\n          handleClick={handleClick}\n          handlePointerOver={handlePointerOver}\n          handlePointerOut={handlePointerOut}\n          setOControls={setOControls}\n          translating={translating}\n          c={color}/>\n  )\n}\n\nfunction Cylinder({v0, v1, d, c, handleClick, handlePointerOver, handlePointerOut }) {\n  const mesh = useRef();\n  const material = useRef();\n\n  const update = (v0, v1)=>{\n    const pos = v0.clone().add(v1).divideScalar(2);\n    const vec = v1.clone().sub(v0);\n    const axis = new THREE.Vector3(0, 1, 0);\n\n    const l = vec.length();\n    vec.normalize();\n\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(axis, vec);\n    const euler = new THREE.Euler().setFromQuaternion(quaternion);\n    return [pos, l, euler]\n  }\n\n  const [pos, l, euler] = update(v0, v1);\n\n  useFrame((state)=>{\n    const [pos, l, euler] = update(v0, v1);\n    mesh.current.position.copy(pos);\n    mesh.current.rotation.copy(euler);\n    mesh.current.scale[1] = l;\n    material.current.color.copy(c);\n  })\n\n  return (\n    <mesh\n      ref={mesh}\n      position={[pos.x, pos.y, pos.z]}\n      rotation={euler}\n      castShadow={true}\n      scale={[d, l, d]}\n      onClick={handleClick}\n      onPointerOver={handlePointerOver}\n      onPointerOut={handlePointerOut}\n    >\n      <cylinderBufferGeometry args={[1, 1, 1, 20]} />\n      <meshLambertMaterial\n        ref={material}\n        color={c}\n      />\n    </mesh>\n  )\n}\n\nfunction Beam({v0, v1, ie, model, sharedData\n              }) {\n  let vec = v1.clone().sub(v0);\n  let l = vec.length();\n  vec.normalize();\n  const vecPiston = vec.clone().multiplyScalar(lPiston);\n  const vecTube = vec.clone().multiplyScalar(lTube);\n  const vecConstraint = vec.clone().multiplyScalar(lConstraint);\n\n  const vOut0 = vecTube.clone().add(v0);\n  const vOut1 = vOut0.clone().add(vecPiston);\n  const vIn0 = v1.clone().sub(vecTube);\n  const vIn1 = vIn0.clone().sub(vecPiston);\n  const vTube00 = v0.clone();\n  const vTube01 = v0.clone().add(vecTube);\n  const vTube11 = v1.clone();\n  const vTube10 = v1.clone().sub(vecTube);\n  const vConstraint0 = vIn0.clone().sub(vec.clone().multiplyScalar(\n    model.lMax[ie] * (model.Model.maxMaxContraction - model.maxContraction[ie])));\n  const vConstraint1 = vConstraint0.clone().add(vecConstraint);\n\n  const cOut = new THREE.Color();\n  const cIn = new THREE.Color();\n  const cJoint = new THREE.Color();\n  const cBeam = new THREE.Color();\n\n  const changeColor =()=>{\n    if (sharedData.showChannel) {\n      const selected = (model.eStatus[ie] === 2);\n      const hovered = (model.eStatus[ie] === 1);\n      const c = cChannels[model.edgeChannel[ie]];\n      cOut.copy(selected ? cSelected : hovered ? cHovered : c);\n      cIn.copy(selected ? cSelected : hovered ? cHovered : c);\n      cJoint.copy(selected ? cSelected : hovered ? cHovered : c);\n      cBeam.copy(selected ? cSelected : hovered ? cHovered : c);\n    }\n    else {\n      const selected = (model.eStatus[ie] === 2);\n      const hovered = (model.eStatus[ie] === 1);\n      cOut.copy(selected ? cSelected : hovered ? cHovered : cBlack);\n      cIn.copy(selected ? cSelected : hovered ? cHovered : cWhite);\n      cJoint.copy(selected ? cSelected : hovered ? cHovered : cWhite);\n      cBeam.copy(selected ? cSelected : hovered ? cHovered : cPassive);\n    }\n  }\n  changeColor();\n\n  useFrame((state)=>{\n    let vec = v1.clone().sub(v0);\n    let l = vec.length();\n    vec.normalize();\n    const vecPiston = vec.clone().multiplyScalar(lPiston);\n    const vecTube = vec.clone().multiplyScalar(lTube);\n    const vecConstraint = vec.clone().multiplyScalar(lConstraint);\n    vOut0.copy(vecTube.clone().add(v0));\n    vOut1.copy(vOut0.clone().add(vecPiston));\n    vIn0.copy(v1.clone().sub(vecTube));\n    vIn1.copy(vIn0.clone().sub(vecPiston));\n    vTube00.copy(v0.clone());\n    vTube01.copy(v0.clone().add(vecTube));\n    vTube11.copy(v1.clone());\n    vTube10.copy(v1.clone().sub(vecTube));\n    vConstraint0.copy(vIn0.clone().sub(vec.clone().multiplyScalar(\n      model.lMax[ie] * (model.Model.maxMaxContraction - model.maxContraction[ie]) )));\n    vConstraint1.copy(vConstraint0.clone().add(vecConstraint));\n\n    changeColor();\n  });\n\n  const handleClick = (e)=>{\n    model.eStatus[ie] = 2;\n    e.stopPropagation();\n  }\n  const handlePointerOver = (e)=>{\n    if (model.eStatus[ie] !== 2) {model.eStatus[ie] = 1;}\n    e.stopPropagation();\n  }\n  const handlePointerOut = (e)=>{\n    if (model.eStatus[ie] !== 2) {model.eStatus[ie] = 0;}\n    e.stopPropagation();\n  }\n\n  const cylinders = [\n    <Cylinder key=\"out\" v0={vOut0} v1={vOut1} d={dOut} c={cOut}\n              handleClick={handleClick} handlePointerOver={handlePointerOver} handlePointerOut={handlePointerOut}/>,\n    <Cylinder key=\"in\" v0={vIn0} v1={vIn1} d={dIn} c={cIn}\n              handleClick={handleClick} handlePointerOver={handlePointerOver} handlePointerOut={handlePointerOut}/>,\n    <Cylinder key=\"joint0\" v0={vTube00} v1={vTube01} d={dTube} c={cJoint}\n              handleClick={handleClick} handlePointerOver={handlePointerOver} handlePointerOut={handlePointerOut}/>,\n    <Cylinder key=\"joint1\" v0={vTube10} v1={vTube11} d={dTube} c={cJoint}\n              handleClick={handleClick} handlePointerOver={handlePointerOver} handlePointerOut={handlePointerOut}/>\n    ];\n  if (model.maxContraction[ie] !== model.Model.maxMaxContraction) {\n    cylinders.push(<Cylinder key=\"constraint\" v0={vConstraint0} v1={vConstraint1} d={dConstraint} c={cBlack}/>);\n  }\n\n  if (model.edgeActive[ie]) {\n    return (cylinders)\n  }\n  else {\n    return (\n      [<Cylinder key=\"beam\" v0={v0} v1={v1} d={dTube} c={cBeam}\n                handleClick={handleClick} handlePointerOver={handlePointerOver} handlePointerOut={handlePointerOut}/>]\n    )\n  }\n\n}\n\nfunction Triangle({vertices, c, opacity, handleClick, handlePointerOver, handlePointerOut}) {\n  const mesh = useRef();\n  const [,forceUpdate] = useReducer(x=>x+1, 0);\n  let vs = [];\n  for (let v of vertices) {\n    vs.push(v.x, v.y, v.z);\n  }\n  const f32array = Float32Array.from(vs);\n\n  return (\n    <mesh\n      ref={mesh}\n      onClick={handleClick}\n      onPointerOver={handlePointerOver}\n      onPointerOut={handlePointerOut}\n    >\n      <bufferGeometry attach={\"geometry\"}>\n        <bufferAttribute\n          attachObject={[\"attributes\", \"position\"]}\n          args={[f32array,3]}\n        />\n      </bufferGeometry>\n      <meshBasicMaterial\n        color={c}\n        opacity={opacity}\n        transparent={true}\n        side={THREE.FrontSide}\n      />\n    </mesh>\n  )\n}\n\nfunction Face({vertices, model, sharedData, i}) {\n\n  const color = new THREE.Color();\n  color.copy(model.fStatus[i] === 2 ? cSelected : model.fStatus[i] === 1 ? cHovered : cBlack);\n\n  const handleClick = (e)=>{\n    if (model.editing) {\n      // model.fStatus[i] = 2;\n      e.stopPropagation();\n      if (sharedData.addingJoint) {\n        model.addPolytope(i);\n        model.forceUpdate();\n      }\n    }\n  }\n\n  const handlePointerOver = (e)=>{\n    if (model.editing) {\n      if (model.fStatus[i] !== 2) model.fStatus[i] = 1;\n      e.stopPropagation();\n    }\n  }\n\n  const handlePointerOut = (e)=>{\n    if (model.editing) {\n      if (model.fStatus[i] !== 2) model.fStatus[i] = 0;\n      e.stopPropagation();\n    }\n  }\n\n  const [,forceUpdate] = useReducer(x=>x+1, 0);\n\n  useFrame( ()=>{\n    if (model.editing) forceUpdate();\n  })\n\n  return (\n    <Triangle vertices={vertices} c={color} opacity={model.editing?0.2:0}\n              handleClick={handleClick} handlePointerOver={handlePointerOver} handlePointerOut={handlePointerOut}\n    />\n  )\n}\n\nfunction PneuMesh({\n  model,\n  sharedData,\n  setOControls\n}) {\n\n  const [clock] = React.useState(new THREE.Clock());\n  useFrame((state)=>{\n    const timeUntilNextFrame = (1000 / fps) - clock.getDelta();\n    setTimeout(()=>\n      {\n        state.ready=true;\n        state.invalidate();\n      },\n      Math.max(0, timeUntilNextFrame)\n    )\n    state.ready=false;\n    const nStepsPerSecond = 1 / model.Model.h;\n    model.step(Math.floor((2.4 / model.Model.h ) / fps));\n  }, 0)\n\n\n  const joints=[];\n  const beams=[];\n  const faces = [];\n\n  for (let [i, v] of model.v.entries()) {\n    joints.push(\n      <Joint\n        key={(\"J\" + String(i))}\n        v={v}\n        iv={i}\n        model={model}\n        setOControls={setOControls}\n        sharedData={sharedData}\n      />\n    )\n  }\n\n  for (let [i, e] of model.e.entries()) {\n    const v0 = model.v[e[0]];\n    const v1 = model.v[e[1]];\n    beams.push(\n      <Beam\n        key={(\"B\"+String(i))}\n        v0={v0}\n        v1={v1}\n        ie={i}\n        model={model}\n        sharedData={sharedData}\n        selected={e.selected}\n        hovered={e.hovered}\n      />\n      )\n  }\n\n  // for (let [i, f] of model.faces.entries()) {\n  //   const vertices = f.map(iv=>model.v[iv]);\n  //   faces.push(\n  //     <Face key={\"F\" + String(i)} vertices={vertices} sharedData={sharedData} model={model} i={i}/>\n  //   );\n  // }\n\n  return ([...joints, ...beams])\n}\n\n\nfunction DLight() {\n  const light = new THREE.DirectionalLight(new THREE.Color(1,1,1), 1.2);\n  light.position.set(0, 0, 5);\n  light.castShadow = true;\n  let mapSize = 10\n  light.shadow.mapSize.width = 512 * mapSize;\n  light.shadow.mapSize.height = 512 * mapSize;\n  light.shadow.camera.top = -3 * mapSize;\n  light.shadow.camera.right = 3 * mapSize;\n  light.shadow.camera.left = -3 * mapSize;\n  light.shadow.camera.bottom = 3 * mapSize;\n  light.shadow.camera.near = 0.1;\n  light.shadow.camera.far = 500;\n  return (<primitive object={light}/>)\n}\n\nconst Controls = ({oControls}) => {\n\n  const {\n    camera,\n    gl: { domElement },\n  } = useThree();\n  /* Invoke the OrbitControls' update function on every frame */\n  useFrame(() => oControls.current.update())\n\n  return <orbitControls ref={oControls} args={[camera, domElement]}/>\n}\n\nfunction Viewer({model, sharedData}) {\n  const oControls = useRef();\n  model.controls = oControls;\n  const [, forceUpdate] = useReducer(x => { return (x+1)}, 0);\n  model.forceUpdate = forceUpdate;\n\n  function setOControls(s){\n    oControls.current.enabled = s\n  }\n\n  return (\n      <Canvas\n        shadowMap={true}\n        concurrent={true}\n        onCreated={({gl, camera}) => {\n          let intensity = 0.92\n          gl.setClearColor(new THREE.Color(intensity, intensity, intensity))\n          gl.setPixelRatio(window.devicePixelRatio);  // required\n          gl.shadowMap.enabled=true;  // default\n          gl.shadowMap.type=THREE.PCFSoftShadowMap; // default\n        }}\n        camera={{\n          fov: 45,\n          position:[0, -20, 1],\n          up:[0, 0, 1]\n        }}\n\n        gl={{antialias:true}}\n      >\n        <Controls oControls={oControls}/>\n        <ambientLight\n          color={new THREE.Color(1, 1, 1)}\n          intensity={0.5}\n        />\n\n        <DLight/>\n\n        <mesh\n          position={[0, 0, 0]}\n          receiveShadow={true}\n          visible={true}\n        >\n          <planeGeometry args={[10000, 10000]}/>\n          <shadowMaterial opacity={0.3}/>\n        </mesh>\n\n        <gridHelper\n          args={[100, 100]}\n          rotation-x={-Math.PI/2}\n          position-z={0}\n          visible={true}\n        />\n\n        <PneuMesh model={model} sharedData={sharedData} setOControls={setOControls}/>\n        <Stats/>\n\n      </Canvas>\n  );\n}\n\nexport default Viewer;\n","import './style.css';\nimport React, {useRef, useState, useMemo, useReducer} from 'react'\nimport {makeStyles, Grid, List, ListItem, ListItemIcon, ListItemText, Divider,\n        Icon, Slider, Switch, Typography, IconButton}\n        from '@material-ui/core'\nimport { extend, Canvas, useFrame, useThree, useResource, useUpdate } from 'react-three-fiber'\nimport {AccessAlarm, Publish, GetApp, ChevronLeft, Edit, GpsFixed, GpsNotFixed,\n        RadioButtonChecked, RadioButtonUnchecked, FilterCenterFocus,\n        SettingsEthernet, WbSunny, FiberManualRecord, Lock, LockOpen} from \"@material-ui/icons\";\n\nconst cBackground = \"rgba(200, 200, 200, 0.6)\";\n\nconst cHovered = \"rgba(250, 250, 250, 0.9)\";\nconst cOff = \"rgba(150, 150, 150, 1)\";\n\nconst cChannels = [\n  \"rgb(100, 100, 200)\",\n  \"rgb(200, 200, 100)\",\n  \"rgb(100, 200, 100)\",\n  \"rgb(100, 200, 200)\",\n  \"rgb(200, 100, 200)\",\n];\n\nconst widthBlock = 5;   // vh\nconst heightBlock = 5;    // vh\nconst paddingBlock = 1;   // vh\nconst marginBlock = 0.5;     // vh\nconst paddingBlocks = 0.5;\nconst widthSlider = 30;\nconst marginSlider = 0.1;\nconst widthSliders = (widthSlider + marginSlider * 2);\n\n\nconst useStyles = makeStyles((theme) => ({\n  mainGUI: {\n    position: \"absolute\",\n    right: \"1.5vh\",\n    top: \"1.5vh\",\n    width: \"28vh\",\n    height: \"auto\",\n    background: cBackground,\n    \"& .MuiList-root\" : {\n      \"& .MuiListItem-root\" : {\n        minHeight: \"6vh\"\n      }\n    }\n  },\n  editingGUI: {\n    position: \"absolute\",\n    right: \"30vh\",\n    top: \"1.5vh\",\n    width: \"30vh\",\n    // height: \"30vh\",\n    background: cBackground,\n  },\n  scriptGUI: {\n    position: \"absolute\",\n    left: \"2vh\",\n    bottom: \"2vh\",\n    background: cBackground,\n  },\n  editingScriptGUI: {\n    position: \"absolute\",\n    right: \"30vh\",\n    top: \"40vh\",\n    width: \"40vh\",\n    background: cBackground,\n  }\n}))\n\nfunction SettingActive({model, updateGUI}) {\n  const icons = [];\n\n  let passive =\n    ![...Array(model.e.length).keys()].every(ie=>(\n      (model.eStatus[ie] !== 2) || (model.eStatus[ie] === 2 && model.edgeActive[ie] === true)\n    ));\n\n  let active =\n    ![...Array(model.e.length).keys()].every(ie=>(\n      (model.eStatus[ie] !== 2) || (model.eStatus[ie] === 2 && model.edgeActive[ie] === false)\n    ));\n\n  icons.push(\n    <Grid item key={\"active\"} style={{width: \"50%\", textAlign: \"center\"}}>\n    <IconButton\n      size={\"small\"}\n      onClick={()=> {\n          for (let ie = 0; ie < model.e.length; ie++) {\n            if (model.eStatus[ie] === 2) {\n              model.edgeActive[ie] = true;\n            }\n          }\n          updateGUI();\n          setTimeout(model.forceUpdate, 50);\n        }\n      }\n    >\n      <WbSunny/>\n    </IconButton>\n    </Grid>\n  )\n\n  icons.push(\n    <Grid item key={\"passive\"} style={{width: \"50%\", textAlign: \"center\"}}>\n    <IconButton\n      size={\"small\"}\n      onClick={()=> {\n          for (let ie = 0; ie < model.e.length; ie++) {\n            if (model.eStatus[ie] === 2) {\n              model.edgeActive[ie] = false;\n            }\n          }\n          updateGUI();\n          setTimeout(model.forceUpdate, 50);\n        }\n      }\n    >\n      <FiberManualRecord/>\n    </IconButton>\n    </Grid>\n  )\n\n\n  return (\n    <ListItem>\n      <ListItemText style={{width: \"50%\"}}>\n        Active / Passive\n      </ListItemText>\n      <Grid container style={{width: \"50%\"}}>\n        {icons}\n      </Grid>\n    </ListItem>\n  )\n}\n\nfunction SettingChannel({n, model, updateGUI}) {\n  const icons = [];\n\n  for (let i=0; i<n; i++) {\n    let checked =\n      ![...Array(model.e.length).keys()].every(ie=>(\n        (model.eStatus[ie] !== 2) || ((model.eStatus[ie] === 2) && (model.edgeChannel[ie] !== i))\n      ))\n\n    icons.push(\n      <Grid key={i} item style={{width: `${1/n * 100}%`, textAlign: \"center\"}} >\n        <IconButton\n          size={\"small\"}\n          onClick={()=> {\n              for (let ie = 0; ie < model.e.length; ie++) {\n                if (model.eStatus[ie] === 2) {\n                  model.edgeChannel[ie] = i;\n                }\n              }\n              updateGUI();\n\n            }\n          }\n        >\n          {checked? <RadioButtonChecked/> :  <RadioButtonUnchecked/>}\n        </IconButton>\n      </Grid>\n    )\n  }\n\n  return (\n  <ListItem>\n    <Grid container styles={{width: \"50%\"}}>\n      {icons}\n    </Grid>\n  </ListItem>\n  )\n}\n\nfunction ControlChannel({n, model, updateGUI}) {\n  const switches = [];\n\n  for (let i=0; i<n; i++) {\n    switches.push(\n      <Grid key={i} item style={{width: `${1/n * 100}%`, textAlign: \"center\"}}>\n        <Switch\n          size={\"small\"}\n          checked={model.inflateChannel[i]}\n          onClick={(e)=>{\n            console.log(e.target.checked);\n            model.inflateChannel[i] = e.target.checked;\n            updateGUI();\n          }}\n        />\n        </Grid>\n    );\n  }\n\n\n  return(\n    <ListItem>\n      <Grid container styles={{width: \"100%\"}} alignItems={\"center\"}>\n        {switches}\n      </Grid>\n    </ListItem>\n  )\n}\n\nfunction Scripts({model, sharedData, updateGUI, classes}) {\n  model.precompute();\n  const widthBlocks = (widthBlock + marginBlock * 2) * model.numActions + paddingBlocks * 2;\n\n  const Block = ({model, iChannel, iAction}) => {\n    const [hovered, setHovered] = useState(false);\n    const isOn = model.script[iChannel][iAction];\n    const [actuating, setActuating] = useState(iAction===model.iAction);\n\n    return (\n      <Grid item\n            key={iAction}\n            className={classes.scriptBlock}\n            style={{\n              background: cChannels[iChannel],\n              width: `${widthBlock}vh`,\n              height: `${heightBlock}vh`,\n              padding: `${paddingBlock}vh`,\n              margin: `${marginBlock}vh`,\n              border: `2px ${hovered?\"solid\":\"none\"} ${cHovered}`,\n              opacity: `${isOn?1:hovered?0.4:0.1}`\n            }}\n            onPointerOver={()=>{setHovered(true)}}\n            onPointerOut={()=>{setHovered(false)}}\n            onClick={()=>{model.script[iChannel][iAction]=!isOn}}\n      >\n      </Grid>\n    )\n  }\n\n  const Row = ({model, iChannel}) => {\n    const blocks = [];\n    for (let iAction=0; iAction<model.numActions; iAction++) {\n      const isOn=true;\n      blocks.push(\n        <Block key={iAction} model={model} isOn={isOn} iChannel={iChannel} iAction={iAction} />\n      );\n    }\n\n    return(\n      <Grid container item spacing={0}>\n        {/*<React.Fragment>*/}\n          {blocks}\n        {/*</React.Fragment>*/}\n      </Grid>\n    )\n  }\n\n  const rows = [];\n  for (let iChannel=0; iChannel<model.numChannels; iChannel++) {\n    rows.push(<Row key={iChannel} iChannel={iChannel} model={model}/>)\n  }\n\n  return ([\n    <Grid key={'buttons'} container item spacing={0} style={{padding:`${paddingBlocks}vh`, width: `${widthBlocks}vh`}}>\n      {rows}\n    </Grid>,\n\n    ]\n  );\n}\n\n\nfunction GUI({model, options, sharedData}) {\n\n  const [, updateGUI] = useReducer(x => x+1, 0);\n  sharedData.updateGUI = updateGUI;\n  window.updateGUI = updateGUI;\n\n  const classes = useStyles();\n\n  const load = (e)=>{\n    let input = document.createElement('input');\n    document.body.appendChild(input);\n    input.type = 'file';\n    input.id = 'inputFile';\n    input.style = 'display:none';\n\n    document.getElementById(\"inputFile\").click();\n    document.getElementById(\"inputFile\").onchange = ()=>{\n\n      let reader = new FileReader();\n      reader.onload = (event) => {\n        let inputFileString = event.target.result;\n        window.inputFileString = inputFileString;\n        let data = JSON.parse(inputFileString);\n        window.data =data;\n        model.loadDict(data);\n        model.simulate=false;\n        model.gravity=true;\n        model.forceUpdate();\n        updateGUI();\n      };\n      reader.readAsText(document.getElementById(\"inputFile\").files[0]);\n      document.body.removeChild(input);\n    };\n  }\n\n  const save = (e)=>{\n    let data = model.saveData();\n    let json = JSON.stringify(data);\n\n    let download = document.createElement('a');\n    document.body.appendChild(download);\n    download.download = 'download.json';\n    download.style.display = 'none';\n    download.href = 'data:text/plain;charset=utf-8,' + encodeURIComponent(json);\n    download.click();\n    document.body.removeChild(download);\n  }\n\n  return (\n    [\n    <div key={\"mainGUI\"} className={classes.mainGUI}\n         onPointerOver={(e)=>{sharedData.GUIHovered=true}}\n         onPointerOut={(e)=>{sharedData.GUIHovered=false}}\n    >\n      <List>\n        <ListItem button selected={false}\n                  onClick={load}>\n          <ListItemIcon>\n            <Publish/>\n          </ListItemIcon>\n          <ListItemText>\n            Load\n          </ListItemText>\n        </ListItem>\n\n\n        <ListItem button\n                  onClick={save}>\n          <ListItemIcon>\n            <GetApp/>\n          </ListItemIcon>\n          <ListItemText>\n            Download\n          </ListItemText>\n        </ListItem>\n\n        <Divider/>\n\n        <ListItem button selected={model.editing}\n                  onClick={(e)=>{\n                    model.editing = !model.editing;\n                    model.Model.gravity = !model.editing;\n                    model.simulate = true;\n                    model.gravity = !model.editing;\n                    updateGUI();\n                    if (model.editing) {\n                      model.resetV();\n                    }\n                    model.forceUpdate();\n                  }}>\n          <ListItemIcon>\n            <ChevronLeft/>\n          </ListItemIcon>\n          <ListItemText>\n            Edit Shape\n          </ListItemText>\n        </ListItem>\n\n\n        <ListItem>\n          <Typography style={{width: \"50%\"}}>\n            Contraction\n          </Typography>\n          <Slider\n            style={{width: \"50%\"}}\n            disabled={\n             model.eStatus.includes(2) ?\n               ![...Array(model.e.length).keys()].every(ie=>(\n                 (model.eStatus[ie]===2 && model.edgeActive[ie]) || (model.eStatus[ie] !==2))) :\n                 true\n            }\n            defaultValue={model.Model.maxMaxContraction}\n            aria-labelledby={\"discrete-slider-custom\"}\n            step={model.Model.contractionInterval}\n            min={0}\n            max={model.Model.maxMaxContraction}\n            valueLabelDisplay={\"auto\"}\n            onChange={(e, val)=>{\n              for (let i=0; i<model.e.length; i++) {\n                if (model.eStatus[i] === 2) {\n                  model.maxContraction[i] = val;\n                }\n              }\n            }}\n            onPointerOut={()=>{model.forceUpdate();}}\n          />\n        </ListItem>\n\n        <ListItem>\n          <Typography style={{width: \"50%\"}}>\n            Length\n          </Typography>\n            <Slider\n              style={{width: \"50%\"}}\n              disabled={\n                model.eStatus.includes(2) ?\n                  ![...Array(model.e.length).keys()].every(ie=>(\n                    (model.eStatus[ie]===2 && !model.edgeActive[ie]) || (model.eStatus[ie] !==2))) :\n                  true\n              }\n              defaultValue={model.Model.maxMaxContraction}\n              aria-labelledby={\"discrete-slider-custom\"}\n              step={model.Model.contractionInterval}\n              min={0}\n              max={model.Model.maxMaxContraction}\n              valueLabelDisplay={\"auto\"}\n              // marks={marks}\n              onChange={\n                (e, val)=>{\n                  for (let i=0; i<model.e.length; i++) {\n                    if (model.eStatus[i] === 2 && model.edgeActive[i] === false) {\n                      model.maxContraction[i] = val;\n                    }\n                  }\n                  model.forceUpdate();\n\n\n                }\n              }\n            />\n        </ListItem>\n\n        <ListItem>\n          <ListItemText style={{width: \"50%\"}}>\n            Fix Joints\n          </ListItemText>\n          <Grid container style={{width: \"50%\"}}  spacing={0} alignItems={\"center\"}>\n          <Grid item key={\"fix\"} style={{width: \"50%\" , textAlign: \"center\"}}>\n\n          <IconButton\n            size={\"small\"}\n            onClick={(e)=>{\n              for (let i=0; i<model.v.length; i++) {\n                if (model.vStatus[i] === 2) model.fixedVs[i] = true;\n              }\n              updateGUI();\n              model.forceUpdate();\n            }}>\n              <Lock/>\n          </IconButton>\n          </Grid>\n\n            <Grid item key={\"unfix\"} style={{width: \"50%\" , textAlign: \"center\"}}>\n          <IconButton\n            size={\"small\"}\n            onClick={(e)=>{\n              for (let i=0; i<model.v.length; i++) {\n                if (model.vStatus[i] === 2) model.fixedVs[i] = false;\n              }\n              updateGUI();\n              model.forceUpdate();\n            }}>\n              <LockOpen/>\n          </IconButton>\n          </Grid>\n          </Grid>\n\n        </ListItem>\n\n        <SettingActive model={model} updateGUI={updateGUI}/>\n\n\n        <Divider/>\n\n        <ListItem button selected={sharedData.editingScript}\n                  onClick={(e)=>{\n                    sharedData.editingScript = !sharedData.editingScript;\n                    updateGUI();\n                  }}>\n          <ListItemIcon>\n            <ChevronLeft/>\n          </ListItemIcon>\n          <ListItemText>\n            Script & Channel\n          </ListItemText>\n        </ListItem>\n\n        <SettingChannel n={model.numChannels} model={model} updateGUI={updateGUI}/>\n\n        <ControlChannel n={model.numChannels} model={model} updateGUI={updateGUI}/>\n\n        <Divider/>\n\n        <ListItem>\n          <ListItemText>\n            Gravity\n          </ListItemText>\n          <Switch\n            i={0}\n            checked={model.gravity}\n            onChange={(e)=>{\n              model.gravity = !model.gravity;\n              updateGUI();\n            }}\n          />\n        </ListItem>\n\n\n        <ListItem>\n          <ListItemText>\n            Simulate\n          </ListItemText>\n          <Switch\n            i={0}\n            checked={model.simulate}\n            onChange={(e)=>{\n              model.simulate = !model.simulate;\n              updateGUI();\n            }}\n          />\n        </ListItem>\n\n\n        <ListItem>\n          <Typography style={{width: \"50%\"}}>\n            Friction\n          </Typography>\n          <Slider\n            style={{width: \"50%\"}}\n            defaultValue={model.Model.frictionFactor}\n            aria-labelledby={\"discrete-slider-custom\"}\n            step={0.1}\n            min={0}\n            max={1}\n            valueLabelDisplay={\"auto\"}\n            // marks={marks}\n          />\n        </ListItem>\n\n        <Divider/>\n\n        <ListItem button\n                  onClick={(e)=>{\n                    model.controls.current.target = model.centroid();\n                    model.forceUpdate();\n                  }}>\n          <ListItemIcon>\n            <FilterCenterFocus/>\n          </ListItemIcon>\n          <ListItemText>\n            Look At Center\n          </ListItemText>\n        </ListItem>\n\n\n        <ListItem>\n          <ListItemText>\n            Show Channel\n          </ListItemText>\n          <Switch\n            i={1}\n            checked={sharedData.showChannel}\n            onChange={(e)=>{\n              sharedData.showChannel = !sharedData.showChannel;\n              updateGUI();\n            }}\n          />\n        </ListItem>\n\n      </List>\n    </div>,\n\n\n    <div key={\"editingGUI\"} className={classes.editingGUI}\n         style={model.editing ? {display: \"block\"} : {display: \"none\"}}\n         onPointerOver={(e)=>{sharedData.GUIHovered=true}}\n         onPointerOut={(e)=>{sharedData.GUIHovered=false}}\n    >\n        <List>\n          <ListItem>\n            <ListItemText>\n              Add Joint\n            </ListItemText>\n            <Switch\n              key={\"add_joint\"}\n              checked={sharedData.addingJoint}\n              onChange={(e,val)=>{\n                sharedData.addingJoint = val;\n                if (val) {\n                  sharedData.removingJoint = false;\n                  sharedData.movingJoint = false;\n                }\n                updateGUI();\n              }}\n            />\n          </ListItem>\n\n          <ListItem>\n            <ListItemText>\n              Move Joint\n            </ListItemText>\n            <Switch\n              key={\"add_joint\"}\n              checked={sharedData.movingJoint}\n              onChange={(e,val)=>{\n                sharedData.movingJoint = val;\n                if (val) {\n                  sharedData.removingJoint = false;\n                  sharedData.addingJoint = false;\n                }\n                model.simulate = true;\n                model.resetSelection();\n                updateGUI();\n              }}\n            />\n          </ListItem>\n\n          <ListItem>\n            <ListItemText>\n              Remove Joint\n            </ListItemText>\n            <Switch\n              key={\"remove_joint\"}\n              checked={sharedData.removingJoint}\n              onChange={(e,val)=>{\n                sharedData.removingJoint = val;\n                if (val) {\n                  sharedData.addingJoint = false;\n                  sharedData.movingJoint = false;\n                }\n                updateGUI();\n              }}\n            />\n          </ListItem>\n\n          <ListItem button\n                    onClick={(e)=>{\n                      const iJoints = [];\n                      for (let i=0; i<model.v.length; i++) {\n                        if (model.vStatus[i] === 2) iJoints.push(i);\n                      }\n                      model.addEdges(iJoints);\n                      model.precompute();\n                      model.forceUpdate();\n                      updateGUI();\n                    }}>\n            <ListItemIcon>\n              <SettingsEthernet />\n            </ListItemIcon>\n            <ListItemText>\n              Connect Joints\n            </ListItemText>\n          </ListItem>\n\n          <ListItem>\n            <ListItemText>\n              X:\n            </ListItemText>\n            <Slider\n              defaultValue={0}\n              arial-labelledby={\"continuous-slider\"}\n              step={0.01}\n              min={-Math.PI / 2}\n              max={Math.PI / 2}\n              valueLabelDisplay={\"auto\"}\n              onChange={(e, val)=>{\n                model.rotate(val, model.euler.y, model.euler.z);\n                model.resetV();\n              }}\n            />\n          </ListItem>\n\n\n          <ListItem>\n            <ListItemText>\n              Y:\n            </ListItemText>\n            <Slider\n              defaultValue={0}\n              arial-labelledby={\"continuous-slider\"}\n              step={0.01}\n              min={-Math.PI / 2}\n              max={Math.PI / 2}\n              valueLabelDisplay={\"auto\"}\n              onChange={(e, val)=>{\n                model.rotate(model.euler.x, val, model.euler.z);\n                model.resetV();\n              }}\n            />\n          </ListItem>\n\n          <ListItem>\n            <ListItemText>\n              Z:\n            </ListItemText>\n            <Slider\n              defaultValue={0}\n              arial-labelledby={\"continuous-slider\"}\n              step={0.01}\n              min={-Math.PI / 2}\n              max={Math.PI / 2}\n              valueLabelDisplay={\"auto\"}\n              onChange={(e, val)=>{\n                model.rotate(model.euler.x, model.euler.y, val);\n                model.resetV();\n              }}\n            />\n          </ListItem>\n        </List>\n\n\n    </div>,\n\n    <div key={\"scriptGUI\"} className={classes.scriptGUI}\n         style={sharedData.editingScript ? {display: \"block\"} : {display: \"block\"}}\n         onPointerOver={(e)=>{sharedData.GUIHovered=true}}\n         onPointerOut={(e)=>{sharedData.GUIHovered=false}}\n    >\n      <Scripts model={model} sharedData={sharedData} classes={classes} updateGUI={updateGUI}/>\n    </div>,\n\n\n    <div key={\"editingScriptGUI\"} className={classes.editingScriptGUI}\n         style={sharedData.editingScript ? {display: \"block\"} : {display: \"none\"}}\n         onPointerOver={(e)=>{sharedData.GUIHovered=true}}\n         onPointerOut={(e)=>{sharedData.GUIHovered=false}}\n    >\n\n      <Grid key={'numChannels'} container item spacing={2} alignItems={\"center\"} style={{\n        padding:`${paddingBlocks}vh`, paddingTop:'0', paddingBottom:'0', width: `${widthSliders + 20}vh`\n      }}>\n        <Grid item style={{margin: `${marginSlider}vh`, width: \"10vh\", fontSize:\"small\"}}>\n          Channels\n        </Grid>\n        <Grid item style={{margin:`${marginSlider}vh` , width: `${widthSlider}vh`}}>\n\n          <Slider\n            key={'numChannels'}\n            defaultValue={model.Model.defaultNumChannels}\n            aria-labelledby={\"discrete-slider-custom\"}\n            step={1}\n            min={1}\n            max={5}\n            valueLabelDisplay={\"auto\"}\n            onChange={(e, val)=>{\n              model.numChannels = val;\n              model.precompute();\n              updateGUI();\n            }}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid key={'numActions'} container item spacing={2} alignItems={\"center\"} style={{\n        padding:`${paddingBlocks}vh`, paddingTop:'0', paddingBottom:'0', width: `${widthSliders + 20}vh`\n      }}>\n        <Grid item style={{margin: `${marginSlider}vh`,  width: \"10vh\", fontSize:\"small\"}}>\n          Actions\n        </Grid>\n        <Grid item style={{margin:`${marginSlider}vh` , width: `${widthSlider}vh`}}>\n\n          <Slider\n            key={'numActions'}\n            defaultValue={model.Model.defaultNumActions}\n            aria-labelledby={\"discrete-slider-custom\"}\n            step={1}\n            min={1}\n            max={20}\n            valueLabelDisplay={\"auto\"}\n            onChange={(e, val)=>{\n              model.numActions = val;\n              model.precompute();\n              updateGUI();\n            }}\n          />\n        </Grid>\n      </Grid>\n\n    </div>\n\n\n  ]\n  )\n}\n\n\nexport default GUI;\n","import {Model} from './model.js'\nimport Viewer from './viewer.js'\nimport GUI from './gui';\nimport React, {useRef} from \"react\";\n\n\nfunction Main() {\n  let model = new Model();\n  window.model = model;\n  const sharedData = {\n    updateGUI: null,\n    GUIHovered: false,\n    unSelect: false,\n    addingJoint: false,\n    movingJoint: false,\n    removingJoint: false,\n    showChannel: false,\n    editingScript: false,\n    numActions: 20,\n    numChannels: 4\n  };\n  model.sharedData = sharedData;\n  window.sharedData = sharedData;\n\n\n  window.addEventListener('pointerdown', (e)=>{\n    sharedData.unSelect = true;\n  }, false);\n\n  window.addEventListener('pointermove', (e)=>{\n    sharedData.unSelect = false;\n  }, false);\n\n  window.addEventListener('pointerup', (e)=>{\n    if (sharedData.unSelect) {\n      if (!sharedData.GUIHovered) {\n        if (model.vStatus.every(b => b !== 1) && model.eStatus.every(b => b !== 1) && model.fStatus.every(b => b !== 1)) {\n          model.vStatus.fill(0);\n          model.eStatus.fill(0);\n          model.fStatus.fill(0);\n        }\n      }\n\n      if (sharedData.updateGUI) setTimeout(() => {\n        sharedData.updateGUI()\n      }, 10);\n    }\n\n  }, false);\n\n  window.addEventListener('keydown', (e)=>{\n      if (e.code === \"KeyA\" && (e.metaKey || e.ctrlKey)) {\n        model.eStatus.fill(2);\n        model.vStatus.fill(2);\n      }\n    }\n  , false)\n\n  return (\n    [\n      <Viewer key={'viewer'} model={model} sharedData={sharedData}/>,\n      <GUI id={'hehe'}key={'gui'} model={model} sharedData={sharedData}/>\n    ]\n  )\n\n}\n\nexport default Main;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport GUI from './gui';\nimport reportWebVitals from './reportWebVitals';\n\nlet root = document.getElementById('root');\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  root\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}